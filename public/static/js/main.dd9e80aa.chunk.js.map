{"version":3,"sources":["assets/images/doctor_toon.png","ui/Theme/Theme.js","ui/Inputs/Inputs.js","validate.js","pages/Login/Login.js","store/actions/auth.js","store/actions/actionTypes.js","constants.js","ui/DrawerLayout/DrawerLayout.js","Components/Header/Header.js","Layout/Layout.js","Components/AppointmentTable/AppointmentTable.js","pages/Dashboard/Dashboard.js","pages/Patients/Patients.js","pages/Forms/FormInputs.js","pages/Forms/Forms.js","App.js","serviceWorker.js","store/utility.js","store/reducer/auth.js","index.js","assets/images/logo.svg"],"names":["module","exports","theme","createMuiTheme","palette","primary","main","purple","contrastText","secondary","green","error","red","useStyles","makeStyles","root","display","flexWrap","textField","form","width","margin","errorText","color","fontSize","marginLeft","marginRight","lineHeight","fontWeight","Inputs","props","classes","renderIcon","config","icon","InputAdornment","position","iconPosition","useEffect","Box","mb","param","elType","TextField","isValid","touched","type","elConfig","label","placeholder","className","helperText","variant","fullWidth","InputProps","startAdornment","value","onChange","changed","FormControl","formControl","InputLabel","Select","options","map","option","index","MenuItem","key","displayValue","FormHelperText","multiline","rows","rowsMax","Fragment","FormLabel","component","FormGroup","row","FormControlLabel","control","Checkbox","checked","name","RadioGroup","aria-label","labelPlacement","Radio","renderInputs","validate","rules","message","r","i","required","trim","minLength","length","maxLength","email","test","invalid","connect","state","loading","auth","token","status","dispatch","onAuth","password","setTimeout","data","authSuccess","code","authFail","actions","withSnackbar","history","useHistory","localStorage","getItem","push","useState","formValid","loginForm","username","logInput","setLogInput","formElements","id","enqueueSnackbar","setItem","ThemeProvider","alignItems","justifyContent","style","height","Card","flexDirection","marginBottom","src","doctortoon","m","onSubmit","event","preventDefault","mt","Typography","v","element","changedLoginForm","changedFormElement","target","formIsValid","inputChangeHandler","Button","disabled","getIcon","menuList","route","divider","submenu","maxWidth","backgroundColor","background","paper","nested","paddingLeft","spacing","navWidth","navLink","borderRadius","transition","transitions","create","easing","sharp","duration","enteringScreen","active","boxShadow","DrawerLayout","React","selectedIndex","setSelectedIndex","Drawer","open","onMouseEnter","onMouseOver","onMouseLeave","Toolbar","List","hoverClass","elId","menu","ListItem","button","onClick","handleClick","ListItemIcon","ListItemText","Collapse","in","timeout","unmountOnExit","disablePadding","NavLink","to","Divider","exact","activeClassName","whiteSpace","Header","AppBar","zIndex","drawer","elevation","noWrap","IconButton","logoutClick","mainCont","drawerhover","Layout","console","log","clear","document","getElementById","children","columns","minWidth","align","createData","mobile","appointment_for","date","time","action","StyledTableCell","withStyles","head","common","white","black","body","TableCell","container","maxHeight","AppointmentTable","page","setPage","rowsPerPage","setRowsPerPage","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableBody","slice","hover","role","tabIndex","format","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","flexGrow","padding","textAlign","text","primaryBg","secondaryBg","infoBg","info","warningBg","warning","title","hAxis","vAxis","colors","Dashboard","dashCardData","recentQueries","logoImage","todo","setTodo","fetchTodo","Grid","item","xs","sm","md","Paper","p","alt","marginTop","val","ind","ListItemAvatar","Avatar","avatar","inline","href","description","classNm","minHeight","CardContent","chartType","legendToggle","Patients","FormInputs","textInput","numberInput","telInput","emailInput","dateInput","timeInput","selectInput","textareaInput","checkboxInput","radioInput","Forms","inputs","formData","setFormData","el","changedForm","chkOpt","checkedValue","forEach","opt","join","CardActions","App","isAuth","path","render","Login","Boolean","window","location","hostname","match","updatedObject","oldObject","updatedProperties","initialState","authStart","authReset","reducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","authReducer","store","createStore","applyMiddleware","thunk","ReactDOM","maxSnack","anchorOrigin","vertical","horizontal","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.dd9e80aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/doctor_toon.04a9f166.png\";","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport green from '@material-ui/core/colors/green';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: purple[500],\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      main: green[500],\r\n    },\r\n    error: {\r\n      main: red[500]\r\n    }\r\n  }\r\n});\r\n\r\nexport default theme;","import React, { useEffect } from 'react';\r\nimport SimpleLineIcon from 'react-simple-line-icons';\r\n\r\nimport {\r\n    Box,\r\n    TextField,\r\n    makeStyles,\r\n    InputAdornment,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    FormGroup, \r\n    FormControlLabel, \r\n    Checkbox,\r\n    FormLabel, \r\n    RadioGroup, \r\n    Radio,\r\n    FormHelperText\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n      /* marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1), */\r\n    },\r\n    form: {\r\n        width: '65%',\r\n        margin: \"0 auto\"\r\n    },\r\n    errorText: {\r\n        color:theme.palette.error.main,\r\n        fontSize:'0.75rem',\r\n        marginLeft:'14px',\r\n        marginRight:'14px',\r\n        lineHeight:'1.66',\r\n        fontWeight:400\r\n    }\r\n}));\r\nconst Inputs = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const renderIcon = (config) => {\r\n        if(config.icon !== null){\r\n            return <InputAdornment position={config.iconPosition}>{config.icon}</InputAdornment>;\r\n        }else{\r\n            return null;\r\n        }\r\n    }\r\n\r\n    const renderInputs = (param) => {\r\n        switch(param.elType) {\r\n            case 'Input':\r\n                return (\r\n                    <TextField\r\n                        error= {!param.isValid && param.touched}\r\n                        type={param.elConfig.type}\r\n                        label={param.elConfig.label}\r\n                        placeholder={param.elConfig.placeholder}\r\n                        className={classes.textField}\r\n                        helperText={param.elConfig.helperText}\r\n                        /* margin=\"dense\" */\r\n                        variant={param.elConfig.variant}\r\n                        fullWidth={param.elConfig.fullWidth}\r\n                        InputProps={{\r\n                            startAdornment: renderIcon(param.elConfig),\r\n                        }}\r\n                        value={param.value}\r\n                        onChange={props.changed}\r\n                    />\r\n                );\r\n            case 'Select':\r\n                return (\r\n                    <FormControl variant=\"outlined\" className={classes.formControl} fullWidth error={!param.isValid && param.touched}>\r\n                        <InputLabel>{param.elConfig.label}</InputLabel>\r\n                        <Select\r\n                            value={param.elConfig.value}\r\n                            label={param.elConfig.label}\r\n                            onChange={props.changed}\r\n                        >\r\n                            {\r\n                                param.elConfig.options.map((option, index) => {\r\n                                    return <MenuItem key={option.value} value={option.value}>{option.displayValue}</MenuItem>\r\n                                })\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{param.elConfig.helperText}</FormHelperText>\r\n                    </FormControl>\r\n                );\r\n            case 'Textarea':\r\n                return (\r\n                    <TextField\r\n                        error= {!param.isValid && param.touched}\r\n                        type={param.elConfig.type}\r\n                        label={param.elConfig.label}\r\n                        placeholder={param.elConfig.placeholder}\r\n                        className={classes.textField}\r\n                        helperText={param.elConfig.helperText}\r\n                        /* margin=\"dense\" */\r\n                        variant={param.elConfig.variant}\r\n                        fullWidth={param.elConfig.fullWidth}\r\n                        InputProps={{\r\n                            startAdornment: renderIcon(param.elConfig),\r\n                            multiline: true,\r\n                            rows: param.elConfig.rows,\r\n                            rowsMax: param.elConfig.rowsMax\r\n                        }}\r\n                        value={param.value}\r\n                        onChange={props.changed}\r\n                    />\r\n                );\r\n            case 'Checkbox': \r\n                return(\r\n                    <React.Fragment>\r\n                        <FormLabel component=\"legend\">{param.elConfig.label}</FormLabel>\r\n                        <FormGroup row>\r\n                            {\r\n                                param.elConfig.options.map((option, index) => {\r\n                                    return <FormControlLabel key={option.value}\r\n                                        control={<Checkbox checked={option.checked} name={param.elConfig.name} value={option.value} onChange={props.changed} />}\r\n                                        label={option.label}\r\n                                    />\r\n                                })\r\n                            }\r\n                        </FormGroup>\r\n                        <div className={classes.errorText}>{param.elConfig.helperText}</div>\r\n                    </React.Fragment>\r\n                );\r\n            case 'Radio': \r\n                return(\r\n                    <React.Fragment>\r\n                        <FormLabel component=\"legend\">{param.elConfig.label}</FormLabel>\r\n                        <RadioGroup row aria-label=\"gender\" name={param.elConfig.name} value={param.value} onChange={props.changed}>\r\n                            {\r\n                                param.elConfig.options.map((option, index) => {\r\n                                    return <FormControlLabel key={option.value} value={option.value} labelPlacement={param.elConfig.labelPlacement} control={<Radio />} label={option.label} />\r\n                                })\r\n                            }\r\n                        </RadioGroup>\r\n                    </React.Fragment>\r\n                    \r\n                )\r\n            default:\r\n                return (<TextField\r\n                    type=\"text\"\r\n                    label=\"Username\"\r\n                    className={classes.textField}\r\n                    helperText=\"\"\r\n                    /* margin=\"dense\" */\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\"><SimpleLineIcon name=\"user\" /></InputAdornment>,\r\n                    }}\r\n                />);\r\n            }\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        //console.log(props);\r\n        \r\n    })\r\n    return(\r\n        <Box mb={4}>\r\n            {\r\n                renderInputs(props.config)\r\n            }\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default Inputs;","export const validate = (value, rules) => {\r\n    let isValid = true;\r\n    let message = '';\r\n    \r\n    rules.map((r, i) => {\r\n        if(r.required){\r\n            \r\n            isValid = value.trim() !== '' && isValid;\r\n            if(!isValid){\r\n                message = r.message\r\n            }else{\r\n                message = '';\r\n            }\r\n        }\r\n\r\n        if(r.minLength){\r\n            if(value.length > 0){\r\n                isValid = value.length >= r.minLength && isValid;\r\n                if(!isValid){\r\n                    message = r.message\r\n                }else{\r\n                    message = '';\r\n                }\r\n            }\r\n            \r\n        }\r\n        if(r.maxLength){\r\n            if(value.length > 0){\r\n                isValid = value.length <= r.maxLength && isValid;\r\n                if(!isValid){\r\n                    message = r.message\r\n                }else{\r\n                    message = '';\r\n                }\r\n            }\r\n        }\r\n        if(r.email){\r\n            if(value.length > 0){\r\n                isValid = (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value)) && isValid;\r\n                if(!isValid){\r\n                    message = r.message\r\n                }else{\r\n                    message = '';\r\n                }\r\n            }\r\n        }\r\n    })\r\n    return message;\r\n    //return isValid;\r\n    \r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SimpleLineIcon from 'react-simple-line-icons';\r\nimport { ThemeProvider  } from '@material-ui/core';\r\nimport * as actions from '../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\nimport { withSnackbar } from 'notistack';\r\n \r\n\r\nimport './Login.css';\r\nimport theme from '../../ui/Theme/Theme';\r\nimport doctortoon from '../../assets/images/doctor_toon.png';\r\n\r\nimport {\r\n    Box,\r\n    Card,\r\n    makeStyles,\r\n    Typography,\r\n    Button,\r\n} from '@material-ui/core';\r\n\r\nimport Inputs from '../../ui/Inputs/Inputs';\r\nimport {validate} from '../../validate';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n      /* marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1), */\r\n    },\r\n    invalid: {\r\n        color:'red'\r\n    },\r\n    form: {\r\n        width: '65%',\r\n        margin: \"0 auto\"\r\n    }\r\n}));\r\n\r\n\r\nconst Login = (props) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    \r\n    useEffect(() => {\r\n        const isAuth = localStorage.getItem('auth');\r\n        if(isAuth){\r\n            history.push('/admin/dashboard');\r\n        }\r\n    });\r\n    const [logInput, setLogInput ] = useState({\r\n        formValid: false,\r\n        loginForm: {\r\n            username: {\r\n                elType: 'Input',\r\n                elConfig: {\r\n                    type:'input',\r\n                    label: 'Username',\r\n                    placeholder: 'Username',\r\n                    name:'username',\r\n                    icon: <SimpleLineIcon name=\"user\" />,\r\n                    iconPosition: 'start',\r\n                    variant: 'outlined',\r\n                    fullWidth: true,\r\n                    helperText: ''\r\n                },\r\n                value:'',\r\n                touched: false,\r\n                isValid: false,\r\n                /* rules: {\r\n                    required: true,\r\n                    minLength:6,\r\n                    email: true\r\n                    //maxLength:8\r\n                } */\r\n                rules:[{\r\n                    required: true,\r\n                    message: 'Please enter username'\r\n                },{\r\n                    minLength: 6,\r\n                    message: 'Must be 6 characters long!.'\r\n                },{\r\n                    email: true,\r\n                    message: 'Not an email'\r\n                }]\r\n            },\r\n            password: {\r\n                elType: 'Input',\r\n                elConfig: {\r\n                    type:'password',\r\n                    label: 'Password',\r\n                    placeholder: 'Password',\r\n                    name:'password',\r\n                    icon: <SimpleLineIcon name=\"key\" />,\r\n                    iconPosition: 'start',\r\n                    variant: 'outlined',\r\n                    fullWidth: true,\r\n                    helperText: ''\r\n                },\r\n                value:'',\r\n                touched: false,\r\n                isValid: false,\r\n                //rules: null\r\n                rules:[{\r\n                    required: true,\r\n                    message: 'Please enter password'\r\n                },{\r\n                    minLength: 6,\r\n                    message: 'Must be 6 characters long!.'\r\n                }]\r\n            },\r\n        },\r\n    });    \r\n\r\n    const formElements = [];\r\n    \r\n    for(let key in logInput.loginForm){\r\n        formElements.push({\r\n            id: key,\r\n            config: logInput.loginForm[key]\r\n        })\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        props.onAuth(logInput.loginForm.username.value, logInput.loginForm.password.value);\r\n        \r\n    }\r\n\r\n    if(props.loading){\r\n        \r\n    }\r\n    \r\n    if(props.error){\r\n        props.enqueueSnackbar(props.message,{variant: 'error'})\r\n    }\r\n    \r\n\r\n    if(props.status === 'success'){\r\n        props.enqueueSnackbar(props.message,{variant: 'success'});\r\n        localStorage.setItem('auth', props.token);\r\n        history.push('/admin/dashboard');\r\n    }\r\n\r\n    const inputChangeHandler = (event, element) => {\r\n        let changedLoginForm = {\r\n            ...logInput.loginForm\r\n        }\r\n        let changedFormElement = {\r\n            ...changedLoginForm[element]\r\n        }\r\n        changedFormElement.touched = true;\r\n        changedFormElement.value = event.target.value;\r\n        changedLoginForm[element] = changedFormElement; \r\n\r\n        \r\n\r\n        if(changedFormElement.rules === null){\r\n            changedFormElement.isValid = true;\r\n        }else{\r\n            changedFormElement.isValid = (validate(event.target.value, changedFormElement.rules) === '')?true: false;\r\n            changedFormElement.elConfig.helperText = validate(event.target.value, changedFormElement.rules);\r\n        }\r\n\r\n        let formIsValid = true;\r\n        for(let element in changedLoginForm){\r\n            formIsValid = changedLoginForm[element].isValid && formIsValid;\r\n        }\r\n\r\n        setLogInput({loginForm: changedLoginForm, formValid: formIsValid});\r\n    }\r\n    \r\n    return(\r\n        <ThemeProvider theme={theme}>\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" className=\"loginCont\" style={{height:'100vh'}}>\r\n                <Card >\r\n                    <Box display=\"flex\" flexDirection=\"row\" flexWrap=\"nowrap\" justifyContent=\"center\" alignItems=\"center\" style={{width:'50vw'}}>\r\n                        <Box className=\"loginLeftBox\">\r\n                            <Box style={{fontSize:'32px', marginBottom:'24px', color:'#fff'}}>Logo</Box>\r\n                            <Box component=\"img\" src={doctortoon} className=\"toonImg\"></Box>\r\n                            <Box color=\"white\" m={2}>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et.</Box>\r\n                        </Box>\r\n                        <Box className=\"loginFormBox\">\r\n                             <form className={classes.form} onSubmit={submitHandler}>\r\n                                <Box mt={12} mb={6}>\r\n                                    <Typography variant=\"h5\" component=\"h5\" color=\"primary\">LOGIN</Typography>\r\n                                    <Typography component=\"span\">Please login to your account</Typography>\r\n                                </Box>\r\n\r\n                                {\r\n                                    formElements.map((v,index) => <Inputs key={v.id} config={v.config} changed={(event) => inputChangeHandler(event, v.id)}/>)\r\n                                }\r\n                                <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"flex-end\">\r\n                                    <Button variant=\"contained\" color=\"primary\" disabled={!logInput.formValid || props.loading} type=\"submit\">\r\n                                        {(!props.loading)?'Login':'Please wait...'}\r\n                                    </Button>\r\n                                </Box>\r\n                             </form>\r\n                        </Box>\r\n                    </Box>\r\n                </Card>\r\n            </Box>\r\n        </ThemeProvider >\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        token: state.auth.token,\r\n        message: state.auth.message,\r\n        status: state.auth.status\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onAuth: (email, password) => dispatch(actions.auth(email, password))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(Login));","import * as actionTypes from './actionTypes';\r\n\r\nexport const authStart = () => {\r\n    return{\r\n        type: actionTypes.AUTH_START\r\n    }\r\n}\r\n\r\n\r\nexport const authSuccess = (data) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        token: data.token,\r\n        status: data.status,\r\n        message: data.message\r\n    }\r\n}\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type:actionTypes.AUTH_FAILURE,\r\n        error: error.code,\r\n        status: error.status,\r\n        message: error.message\r\n    }\r\n}\r\n \r\nexport const authReset = () => {\r\n    return {\r\n        type:actionTypes.AUTH_RESET,\r\n    }\r\n}\r\nexport const auth = (email, password) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n\r\n        if(email === 'admin@gmail.com' && password === '123456'){\r\n            setTimeout(function(){\r\n                let data = {\r\n                    token: 'tkn121212',\r\n                    status: 'success',\r\n                    message: 'Loggedin successfully!..'\r\n                }\r\n                dispatch(authSuccess(data));\r\n                dispatch(authReset());\r\n            },5000);\r\n        }else{\r\n            setTimeout(function(){\r\n                let error = {\r\n                    code: 401,\r\n                    status: 'failed',\r\n                    message: 'Check your username or password!.'\r\n                }\r\n                dispatch(authFail(error));\r\n                dispatch(authReset());\r\n            },5000);\r\n        }\r\n        \r\n    }\r\n}","export const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAILURE = 'AUTH_FAILURE';\r\nexport const AUTH_RESET = 'AUTH_RESET';","import React from 'react';\r\n\r\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\r\nimport AirlineSeatIndividualSuiteOutlinedIcon from '@material-ui/icons/AirlineSeatIndividualSuiteOutlined';\r\nimport DateRangeOutlinedIcon from '@material-ui/icons/DateRangeOutlined';\r\nimport GroupWorkOutlinedIcon from '@material-ui/icons/GroupWorkOutlined';\r\nimport FlipOutlinedIcon from '@material-ui/icons/FlipOutlined';\r\nimport LocalPharmacyOutlinedIcon from '@material-ui/icons/LocalPharmacyOutlined';\r\nimport AssignmentIndOutlinedIcon from '@material-ui/icons/AssignmentIndOutlined';\r\nimport MeetingRoomOutlinedIcon from '@material-ui/icons/MeetingRoomOutlined';\r\nimport ReceiptOutlinedIcon from '@material-ui/icons/ReceiptOutlined';\r\nimport PersonPinOutlinedIcon from '@material-ui/icons/PersonPinOutlined';\r\nimport VerticalSplitOutlinedIcon from '@material-ui/icons/VerticalSplitOutlined';\r\n\r\nexport const base_url = \"\";\r\nexport const drawerWidth = '240px';\r\n\r\nexport const getIcon = (icon) => {\r\n    switch(icon) {\r\n        case 'home':\r\n            //return (<i className=\"ico icon-home\"></i>);\r\n            return <HomeOutlinedIcon/>;\r\n        case 'patients':\r\n            return (<AirlineSeatIndividualSuiteOutlinedIcon/>);\r\n        case 'appointments':\r\n            return (<DateRangeOutlinedIcon/>);\r\n        case 'laboratory':\r\n            return (<GroupWorkOutlinedIcon/>);\r\n        case 'radiology':\r\n            return (<FlipOutlinedIcon/>);\r\n        case 'pharmacy':\r\n            return (<LocalPharmacyOutlinedIcon/>);\r\n        case 'pool':\r\n            return (<MeetingRoomOutlinedIcon/>);\r\n        case 'ward':\r\n            return (<AssignmentIndOutlinedIcon/>);\r\n        case 'billing':\r\n            return (<ReceiptOutlinedIcon/>);\r\n        case 'staff':\r\n            return (<PersonPinOutlinedIcon/>);\r\n        case 'forms':\r\n            return (<VerticalSplitOutlinedIcon/>);\r\n      default:\r\n        return ('');\r\n    }\r\n}\r\n\r\n\r\n\r\n/** Menu list  */\r\nexport const menuList = [\r\n    {\r\n        key: 'dashboard',\r\n        name: 'Dashboard',\r\n        route: '/admin/dashboard',\r\n        icon: getIcon('home'),//'icon-home',\r\n        divider: false,\r\n        submenu: []\r\n    },\r\n    {\r\n        key: 'patients',\r\n        name: 'Patients',\r\n        route: '/admin/patients',\r\n        icon: getIcon('patients'),//'ico icon-patient',\r\n        divider: false,\r\n        submenu: []\r\n    },\r\n    {\r\n        key: 'appointments',\r\n        name: 'Appointments',\r\n        route: '/admin/appointments',\r\n        icon: getIcon('appointments'),//'ico icon-appointment',\r\n        divider: true,\r\n        submenu: []\r\n    },\r\n    {\r\n        key: 'laboratory',\r\n        name: 'Laboratory',\r\n        route: '/admin/laboratory',\r\n        icon: getIcon('laboratory'),//'ico icon-laboratory',\r\n        divider: false,\r\n        submenu: []/* [\r\n            {\r\n                key: 'allappointments',\r\n                name: 'All Appointments',\r\n                route: '/admin/appointments/all',\r\n                icon: 'PlaylistAddCheckIcon'\r\n            },\r\n            {\r\n                key: 'addappointments',\r\n                name: 'Add Appointments',\r\n                route: '/admin/appointments/add',\r\n                icon: 'PlaylistAddCheckIcon'\r\n            },\r\n        ] */\r\n    },\r\n    {\r\n        key: 'radiology',\r\n        name: 'Radiology',\r\n        route: '/admin/radiology',\r\n        icon: getIcon('radiology'),//'ico icon-x-ray',\r\n        divider: false,\r\n        submenu: []\r\n    },\r\n    {\r\n        key: 'pharmacy',\r\n        name: 'Pharmacy',\r\n        route: '/admin/pharmacy',\r\n        icon: getIcon('pharmacy'),//'ico icon-medicine',\r\n        divider: true,\r\n        submenu: []\r\n    },\r\n    {\r\n        key: 'patient-pool',\r\n        name: 'Patient pool',\r\n        route: '/admin/patient-pool',\r\n        icon: getIcon('pool'),//'ico icon-data-collection',\r\n        divider: false,\r\n        submenu: []\r\n    },\r\n    {\r\n        key: 'ward',\r\n        name: 'Ward management',\r\n        route: '/admin/ward',\r\n        icon: getIcon('ward'),//'ico icon-hospital',\r\n        divider: false,\r\n        submenu: []\r\n    },\r\n    {\r\n        key: 'billing',\r\n        name: 'Billing management',\r\n        route: '/admin/billing',\r\n        icon: getIcon('billing'),//'ico icon-invoice',\r\n        divider: true,\r\n        submenu: []\r\n    },\r\n    {\r\n        key: 'staff',\r\n        name: 'Staff management',\r\n        route: '/admin/staff',\r\n        icon: getIcon('staff'),//'ico icon-id-card',\r\n        divider: false,\r\n        submenu: []\r\n    },\r\n    {\r\n        key: 'forms',\r\n        name: 'Forms',\r\n        route: '/admin/forms',\r\n        icon: getIcon('forms'),//'ico icon-id-card',\r\n        divider: false,\r\n        submenu: []\r\n    },\r\n]","import React from 'react';\r\nimport { NavLink  } from 'react-router-dom'\r\n\r\nimport { Toolbar, Drawer, List, ListItem, ListItemIcon, ListItemText, Divider, Collapse } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\nimport { menuList, drawerWidth } from '../../constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    nested: {\r\n      paddingLeft: theme.spacing(4),\r\n    },\r\n    navWidth: {\r\n        width:drawerWidth\r\n    },\r\n    navLink: {\r\n        borderRadius:\"0 42px 42px 0\",\r\n        transition: theme.transitions.create('all', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        \"&:hover\": {\r\n            backgroundColor: theme.palette.primary.main,\r\n            color: '#fff',\r\n        }\r\n    },\r\n    active: {\r\n        //backgroundColor: theme.palette.primary.main,\r\n        boxShadow:\"6px 0px 0px inset \"+theme.palette.primary.main,\r\n        color: theme.palette.primary.main+' !important',\r\n        borderRadius:\"0 42px 42px 0\",\r\n        \"&:hover\": {\r\n            backgroundColor: theme.palette.primary.main,\r\n            color: '#fff !important',\r\n            \r\n        }\r\n    }\r\n}));\r\n\r\nconst DrawerLayout = (props) => {\r\n\r\n    const classes = useStyles();\r\n   \r\n    const [selectedIndex, setSelectedIndex] = React.useState(\"\")\r\n\r\n    const handleClick = (index)  => {\r\n        if (selectedIndex === index) {\r\n            setSelectedIndex(\"\")\r\n        } else {\r\n            setSelectedIndex(index)\r\n        }\r\n    }\r\n   \r\n\r\n    return(\r\n        <Drawer open variant=\"permanent\" onMouseEnter={props.onMouseOver} onMouseLeave={props.onMouseLeave}>\r\n            <Toolbar />\r\n\r\n            <List component=\"nav\" className={props.hoverClass} id={props.elId}/*  className={classes.navWidth} */>\r\n            {\r\n                menuList.map((menu, index) => (\r\n                    (menu.submenu.length > 0)?\r\n                        <React.Fragment key={menu.key}>\r\n                            <ListItem key={menu.key} button onClick={() => handleClick(index)}>\r\n                                {/* <ListItemIcon>{getIcon(menu.icon)}</ListItemIcon> */}\r\n                                <ListItemIcon><i className={menu.icon}></i></ListItemIcon>\r\n                                <ListItemText primary={menu.name} />\r\n                                {(index === selectedIndex) ? <ExpandLess /> : <ExpandMore />}\r\n                            </ListItem>\r\n                            <Collapse in={index === selectedIndex} timeout=\"auto\" unmountOnExit>\r\n                                <List component=\"div\" disablePadding>\r\n                                    {\r\n                                        menu.submenu.map((m, i) => (\r\n                                            <ListItem key={m.key} button className={classes.nested} component={NavLink} to={m.route}>\r\n                                                {/* <ListItemIcon>\r\n                                                    {getIcon(m.icon)}\r\n                                                </ListItemIcon> */}\r\n                                                <ListItemText primary={'-- '+m.name} />\r\n                                            </ListItem>\r\n                                        ))\r\n                                    }\r\n                                </List>\r\n                            </Collapse>\r\n                            <Divider />\r\n                        </React.Fragment> \r\n                    :\r\n                        <React.Fragment key={menu.key}>\r\n                            {\r\n                                (menu.route === '/')?\r\n                                    <ListItem button key={menu.key} className={classes.navLink} component={NavLink} to={menu.route} exact  activeClassName={classes.active+' active'}>\r\n                                        <ListItemIcon>{menu.icon}</ListItemIcon>\r\n                                        \r\n                                        <ListItemText primary={menu.name} style={{whiteSpace:'nowrap'}} />\r\n                                    </ListItem>\r\n                                :\r\n                                    <ListItem button key={menu.key} className={classes.navLink} component={NavLink} to={menu.route} activeClassName={classes.active+' active'}>\r\n                                        <ListItemIcon>{menu.icon}</ListItemIcon>\r\n                                        <ListItemText primary={menu.name} style={{whiteSpace:'nowrap'}} />\r\n                                    </ListItem>\r\n                            }\r\n                            {(menu.divider)?<Divider />:''}\r\n                        </React.Fragment>\r\n                ))\r\n            }\r\n            </List>\r\n          </Drawer>\r\n    );\r\n}\r\n\r\nexport default DrawerLayout;","import React from 'react';\r\n\r\nimport { AppBar, Toolbar, IconButton,Typography, Box } from '@material-ui/core';\r\nimport SimpleLineIcon from 'react-simple-line-icons';\r\nimport theme from '../../ui/Theme/Theme';\r\n\r\nconst Header = (props) => {\r\n    \r\n    return(\r\n        <React.Fragment>\r\n            <AppBar  color=\"default\" position=\"fixed\" style={{zIndex: theme.zIndex.drawer + 1,}} elevation={0}>\r\n                <Toolbar style={{backgroundColor:'#fff'}}>\r\n                  <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\" style={{width:'100%'}}>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                      LOGO\r\n                    </Typography>\r\n                    <Box component=\"div\">\r\n                      <IconButton>\r\n                        <SimpleLineIcon name=\"bell\" />\r\n                      </IconButton>\r\n                      <IconButton>\r\n                        <SimpleLineIcon name=\"settings\" />\r\n                      </IconButton>\r\n                      <IconButton onClick={props.logoutClick}>\r\n                        <SimpleLineIcon name=\"logout\" />\r\n                      </IconButton>\r\n                    </Box>\r\n                  </Box>\r\n                  \r\n                </Toolbar>\r\n              </AppBar>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { useEffect } from 'react';\r\n\r\nimport theme from '../ui/Theme/Theme';\r\nimport DrawerLayout from '../ui/DrawerLayout/DrawerLayout';\r\n\r\nimport { drawerWidth } from '../constants';\r\nimport Header from '../Components/Header/Header';\r\nimport {\r\n    ThemeProvider,\r\n    makeStyles,\r\n    Toolbar\r\n} from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    nested: {\r\n      paddingLeft: theme.spacing(4),\r\n    },\r\n    navWidth: {\r\n        width:drawerWidth\r\n    },\r\n    mainCont: {\r\n      marginLeft:'64px',\r\n      transition: theme.transitions.create('margin-left', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerhover: {\r\n        width:'64px',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n      /* \"&:hover\": {\r\n        width: drawerWidth,\r\n        mainCont:{\r\n          width: '240px'\r\n        }\r\n      }, */\r\n    },\r\n}));\r\n\r\nconst Layout = (props) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    \r\n    const logoutHandler = () => {\r\n        console.log(history)\r\n        localStorage.clear();\r\n        history.push('/login');\r\n    }\r\n\r\n    \r\n  \r\n    //let mini = true;\r\n\r\n    useEffect(() => {\r\n        console.log('com zzx');\r\n        const isAuth = localStorage.getItem('auth');\r\n        if(!isAuth){\r\n            history.push('/login');\r\n        }\r\n    });\r\n\r\n    const openNav = () => {\r\n        document.getElementById('sideMenu').style.width = drawerWidth;\r\n        document.getElementById('mainCont').style.marginLeft = drawerWidth;\r\n    }\r\n\r\n    const closeNav = () => {\r\n        document.getElementById('sideMenu').style.width = '64px';\r\n        document.getElementById('mainCont').style.marginLeft = '64px';\r\n    }\r\n    return(\r\n            <ThemeProvider theme={theme}>\r\n                <Header logoutClick={logoutHandler} />\r\n                <Toolbar />\r\n                <DrawerLayout hoverClass={classes.drawerhover} elId=\"sideMenu\" onMouseOver={openNav} onMouseLeave={closeNav} />\r\n                <main className={classes.mainCont} id=\"mainCont\">\r\n                    { props.children }\r\n                </main>\r\n                \r\n            </ThemeProvider>\r\n    );\r\n    \r\n}\r\n\r\nexport default Layout;","import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport theme from '../../ui/Theme/Theme';\r\n\r\nimport SimpleLineIcon from 'react-simple-line-icons';\r\n\r\nconst columns = [\r\n  { id: 'name', label: 'Name', minWidth: 170 },\r\n  { id: 'mobile', label: 'Mobile', minWidth: 100},\r\n  { id: 'appointment_for', label: 'Appointment For', minWidth: 50 },\r\n  {\r\n    id: 'date',\r\n    label: 'Date',\r\n    minWidth: 100,\r\n    align: 'right',\r\n  },\r\n  {\r\n    id: 'time',\r\n    label: 'Time',\r\n    minWidth: 50,\r\n    align: 'right',\r\n  },\r\n  {\r\n    id: 'action',\r\n    label: 'Action',\r\n    minWidth: 170,\r\n    align: 'right',\r\n  },\r\n];\r\n\r\nfunction createData(name, mobile,appointment_for, date, time, action) {\r\n  return { name, mobile, appointment_for, date, time, action };\r\n}\r\n\r\nconst rows = [\r\n  createData('Raj','+91-9876543210', 'Dog', '15/Aug/2020', '02:00', <div><IconButton color=\"secondary\"><SimpleLineIcon name=\"check\" /></IconButton> <IconButton style={{color: theme.palette.error.main}}><SimpleLineIcon name=\"close\" /></IconButton></div>),\r\n  createData('Raj','+91-9876543210', 'Dog', '15/Aug/2020', '02:30', <div><IconButton color=\"secondary\"><SimpleLineIcon name=\"check\" /></IconButton> <IconButton style={{color: theme.palette.error.main}}><SimpleLineIcon name=\"close\" /></IconButton></div>),\r\n  createData('Raj','+91-9876543210', 'Dog', '15/Aug/2020', '03:00', 'Approved'),\r\n  createData('Raj','+91-9876543210', 'Dog', '15/Aug/2020', '03:20', 'Rejected'),\r\n  createData('Raj','+91-9876543210', 'Dog', '15/Aug/2020', '04:00', <div><IconButton color=\"secondary\"><SimpleLineIcon name=\"check\" /></IconButton> <IconButton style={{color: theme.palette.error.main}}><SimpleLineIcon name=\"close\" /></IconButton></div>),\r\n  createData('Raj','+91-9876543210', 'Dog', '15/Aug/2020', '05:45', <div><IconButton color=\"secondary\"><SimpleLineIcon name=\"check\" /></IconButton> <IconButton style={{color: theme.palette.error.main}}><SimpleLineIcon name=\"close\" /></IconButton></div>),\r\n];\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.white,\r\n      color: theme.palette.common.black,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n  error: {\r\n    color: theme.palette.error.main\r\n  }\r\n});\r\n\r\nexport default function AppointmentTable() {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead color=\"primary\">\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <StyledTableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </StyledTableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={'app-'+index}>\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={'appcol-'+column.id} align={column.align}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </div>\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport logoImage from '../../assets/images/logo.svg';\r\n\r\nimport { Grid, Paper, Box, CardContent, Card,List, ListItem, ListItemAvatar, ListItemText, Typography, Avatar, IconButton } from '@material-ui/core';\r\nimport {ThemeProvider, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nimport theme from '../../ui/Theme/Theme';\r\n\r\nimport './Dashboard.css';\r\n\r\nimport AppointmentTable from '../../Components/AppointmentTable/AppointmentTable';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    primaryBg: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        color:theme.palette.primary.contrastText,\r\n    },\r\n    secondaryBg: {\r\n        backgroundColor: theme.palette.secondary.main\r\n    },\r\n    infoBg: {\r\n        backgroundColor: theme.palette.info.main\r\n    },\r\n    warningBg: {\r\n        backgroundColor: theme.palette.warning.main\r\n    }\r\n}));\r\n\r\nconst options = {\r\n    title: \"Revenue comparison\",\r\n    hAxis: { title: \"Year\", },\r\n    vAxis: { title: \"Revenue\",},\r\n    colors:['#ff9800', '#2196f3', '#4caf50'],\r\n    //legend: \"none\"\r\n};\r\n\r\nconst Dashboard = (props) => {\r\n    const classes = useStyles();\r\n    const data = [\r\n        [\"Year\", \"Hospital Income\", 'Pharmacy Income', 'Stock Expenses'],\r\n        ['2017', 12300, 8945, 12005],\r\n        ['2018', 24030, 6000, 5600],\r\n        ['2019', 30000, 21000, 20005],\r\n        ['2020', 50233, 45000, 10000],\r\n    ];\r\n\r\n    const dashCardData = [\r\n        {\r\n            'icon':'icon-people',\r\n            'count':86,\r\n            'label': 'Today\\'s appointment',\r\n            'classNm': classes.primaryBg\r\n        },{\r\n            'icon':'icon-people',\r\n            'count':86,\r\n            'label': 'Total Appointments',\r\n            'classNm': classes.secondaryBg\r\n        },{\r\n            'icon':'icon-people',\r\n            'count': '45%',\r\n            'label': 'Stocks',\r\n            'classNm': classes.infoBg\r\n        },{\r\n            'icon':'icon-people',\r\n            'count':'80k',\r\n            'label': 'Total Revenue',\r\n            'classNm': classes.warningBg\r\n        }\r\n    ];\r\n\r\n    const recentQueries = [{\r\n        'avatar': logoImage, \r\n        'name': 'John',\r\n        'mobile': '+919000000009', \r\n        'email': 'test@mail.com',\r\n        'primary': 'Is home visit is vailable?', \r\n        'secondary': ' I am looking for a home visit, is this available please reply me...', \r\n    },{\r\n        'avatar': logoImage, \r\n        'name': 'Agbar',\r\n        'mobile': '+919000000009', \r\n        'email': 'test@mail.com',\r\n        'primary': 'Is home visit is vailable?', \r\n        'secondary': ' I am looking for a home visit, is this available please reply me...', \r\n    },{\r\n        'avatar': logoImage, \r\n        'name': 'George',\r\n        'mobile': '+919000000009', \r\n        'email': 'test@mail.com',\r\n        'primary': 'Is home visit is vailable?', \r\n        'secondary': ' I am looking for a home visit, is this available please reply me...', \r\n    }];\r\n\r\n    const [todo, setTodo] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setTimeout(function(){\r\n            fetchTodo();\r\n        },5000);\r\n        \r\n    });\r\n\r\n    const fetchTodo = () => {\r\n        let data = [{\r\n            'title':'Purchase stocks',\r\n            'key':'Pharma',\r\n            'description':'Pharmacy item stocklist'\r\n        },{\r\n            'title':'Purchase equiments',\r\n            'key':'Equipment',\r\n            'description':'Equipment needed.'\r\n        },{\r\n            'title':'Meeting',\r\n            'key':'Tambaram',\r\n            'description':'Attend seminar meeting at Tambaram.'\r\n        }]\r\n    \r\n        setTodo(data);\r\n    }\r\n\r\n    \r\n\r\n    \r\n\r\n    return(\r\n        <ThemeProvider theme={theme}>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={12} md={3}>\r\n                    <Paper p={2} className={classes.paper +' profileCard'}>\r\n                        <Box component=\"div\" className={\"profileCardImg\"} elevation={2}>\r\n                            <img src={logoImage} alt=\"image\" />\r\n                        </Box>\r\n                        <Box component=\"h3\" m={1}>\r\n                            Dr. Radhakrishnan. MBBS,PhD\r\n                        </Box>\r\n                        <Box component=\"p\" mb={2}>Specialist in Veterinary treatment for pets</Box>\r\n                        <Grid container>\r\n                            <Grid item xs={3}>\r\n                                <span className=\"countSpan\">206</span>\r\n                                <span>Clients</span>\r\n                            </Grid>\r\n                            <Grid item xs={1}>\r\n                            </Grid>\r\n                            \r\n                            <Grid item xs={4}>\r\n                                <span className=\"countSpan\">1282</span>\r\n                                <span>Appointments</span>\r\n                            </Grid>\r\n                            <Grid item xs={1}>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <span className=\"countSpan\">4.8/5</span>\r\n                                <span>Rating</span>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n\r\n                    <Paper style={{marginTop:'16px'}} className={classes.paper}>\r\n                        <Box component=\"h4\" m={1}>\r\n                            Recent queries\r\n                        </Box>\r\n                        <Box component=\"div\" mb={2}>\r\n                            <List className={classes.root}>\r\n                                {\r\n                                    recentQueries.map((val, ind) => {\r\n                                        return (<ListItem key={'query-'+ind} alignItems=\"flex-start\" divider>\r\n                                            <ListItemAvatar>\r\n                                            <Avatar src={val.avatar} /> \r\n                                            </ListItemAvatar>\r\n                                            <ListItemText\r\n                                            primary={val.primary}\r\n                                            secondary={\r\n                                                <React.Fragment>\r\n                                                    <Typography \r\n                                                        component=\"span\"\r\n                                                        variant=\"body2\"\r\n                                                        className={classes.inline}\r\n                                                        color=\"textPrimary\"\r\n                                                    >\r\n                                                        {val.name}\r\n                                                    </Typography>\r\n                                                    {' -- '+val.secondary}\r\n                                                    <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"flex-end\" style={{width:'100%'}}>\r\n                                                        <IconButton component=\"a\" href={'tel:'+val.mobile} style={{fontSize:'16px'}}>\r\n                                                            {/* <SimpleLineIcon component=\"span\" name=\"phone\" /> */}\r\n                                                            <i className=\"icon-phone\"></i>\r\n                                                        </IconButton>\r\n                                                        <IconButton component=\"a\" href={'mailto:'+val.email} style={{fontSize:'16px'}}>\r\n                                                            {/* <SimpleLineIcon component=\"span\" name=\"envelope\" /> */}\r\n                                                            <i className=\"icon-envelope\"></i>\r\n                                                        </IconButton>\r\n                                                    </Box>\r\n                                                </React.Fragment>\r\n                                            }\r\n                                            />\r\n                                        </ListItem>)\r\n                                    })\r\n                                }\r\n                                \r\n                                \r\n                            </List>\r\n                        </Box>\r\n                    </Paper>\r\n\r\n                    <Paper style={{marginTop:'16px'}} className={classes.paper}>\r\n                        <Box component=\"h4\" m={1}>\r\n                            ToDo List\r\n                        </Box>\r\n                        <Box component=\"div\" mb={2}>\r\n                            <List className={classes.root}>\r\n                                {\r\n                                    (todo.length === 0)? \r\n                                        <Box component=\"p\">No data found!..</Box>\r\n                                    :\r\n                                        todo.map((val, ind) => {\r\n                                            return (\r\n                                                <ListItem alignItems=\"flex-start\" divider key={'todo-'+ind}>\r\n                                                    <ListItemText\r\n                                                    primary={val.title}\r\n                                                    secondary={\r\n                                                        <React.Fragment>\r\n                                                        <Typography \r\n                                                            component=\"span\"\r\n                                                            variant=\"body2\"\r\n                                                            className={classes.inline}\r\n                                                            color=\"primary\"\r\n                                                        >\r\n                                                            {val.key}\r\n                                                        </Typography>\r\n                                                        {\" — \"+val.description}\r\n                                                        </React.Fragment>\r\n                                                    }\r\n                                                    />\r\n                                                </ListItem>\r\n                                            )\r\n                                        })\r\n                                }                               \r\n                                \r\n                            </List>\r\n                        </Box>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={9}>\r\n                    <Grid container spacing={3}>\r\n                        {\r\n                            dashCardData.map((val, ind) => {\r\n                                return (<Grid item xs={12} sm={6} md={3} key={ind}>\r\n                                            <Box component=\"div\" className={\" dashCard\"}>\r\n                                                <Box component=\"div\" className={val.classNm +\" card-body\"}>\r\n                                                    <Box component=\"span\" className=\"dashIcon\"><i className={val.icon}></i></Box>\r\n                                                    <Box component=\"div\" className=\"counterInside\">\r\n                                                        <Box component=\"h3\" className=\"dashCount\">{val.count}</Box>\r\n                                                        <Box component=\"p\" m={0} className=\"dashLabel\">{val.label}</Box>\r\n                                                    </Box>\r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Grid>);\r\n                            })\r\n                        }\r\n                        <Grid item xs={12}>\r\n                            <Card style={{minHeight:'400px'}}>\r\n                                <CardContent>\r\n                                <Chart\r\n                                    chartType=\"AreaChart\"\r\n                                    data={data}\r\n                                    options={options}\r\n                                    width=\"100%\"\r\n                                    height=\"400px\"\r\n                                    legendToggle\r\n                                />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Card style={{minHeight:'400px'}}>\r\n                                <CardContent className={classes.paper}>\r\n                                    <Box component=\"h4\" m={1} style={{textAlign:'left'}}>\r\n                                        Recent appointments\r\n                                    </Box>\r\n                                    <AppointmentTable />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </ThemeProvider>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\r\n\r\nconst Patients = () => {\r\n    return(\r\n        <div>\r\n            Patients\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Patients;","import React from 'react';\r\nimport SimpleLineIcon from 'react-simple-line-icons';\r\nimport DialpadIcon from '@material-ui/icons/Dialpad';\r\n\r\nexport const FormInputs = {\r\n    textInput: {\r\n        elType: 'Input',\r\n        elConfig: {\r\n            type:'input',\r\n            label: 'Input',\r\n            placeholder: '',\r\n            name:'input',\r\n            icon: <SimpleLineIcon name=\"user\" />,\r\n            iconPosition: 'start',\r\n            variant: 'outlined',\r\n            fullWidth: true,\r\n            helperText: ''\r\n        },\r\n        value:'',\r\n        touched: false,\r\n        isValid: false,\r\n        rules:[{\r\n            required: true,\r\n            message: 'Please enter username'\r\n        }]\r\n    },\r\n    numberInput: {\r\n        elType: 'Input',\r\n        elConfig: {\r\n            type:'number',\r\n            label: 'Number',\r\n            placeholder: '',\r\n            name:'number',\r\n            icon: <SimpleLineIcon name=\"phone\" />,\r\n            iconPosition: 'start',\r\n            variant: 'outlined',// standard, // filled\r\n            fullWidth: true,\r\n            helperText: ''\r\n        },\r\n        value:'',\r\n        touched: false,\r\n        isValid: false,\r\n        rules:[{\r\n            required: true,\r\n            message: 'Please enter number'\r\n        },{\r\n            maxLength: 6,\r\n            message: 'Not more than 6 characters!.'\r\n        }]\r\n    },\r\n    telInput: {\r\n        elType: 'Input',\r\n        elConfig: {\r\n            type:'tel',\r\n            label: 'Telephone',\r\n            placeholder: '',\r\n            name:'telephone',\r\n            icon: <DialpadIcon />,// material icon\r\n            iconPosition: 'start',\r\n            variant: 'outlined',\r\n            fullWidth: true,\r\n            helperText: ''\r\n        },\r\n        value:'',\r\n        touched: false,\r\n        isValid: false,\r\n        rules:[{\r\n            required: true,\r\n            message: 'Please enter telephone'\r\n        }]\r\n    },\r\n    emailInput: {\r\n        elType: 'Input',\r\n        elConfig: {\r\n            type:'email',\r\n            label: 'E-Mail',\r\n            placeholder: '',\r\n            name:'email',\r\n            icon: <SimpleLineIcon name=\"envelope\" />,\r\n            iconPosition: 'start',\r\n            variant: 'outlined',\r\n            fullWidth: true,\r\n            helperText: ''\r\n        },\r\n        value:'',\r\n        touched: false,\r\n        isValid: false,\r\n        rules:[{\r\n            required: true,\r\n            message: 'Please enter email'\r\n        },{\r\n            email: true,\r\n            message: 'Not an email'\r\n        }]\r\n    },\r\n    dateInput: {\r\n        elType: 'Input',\r\n        elConfig: {\r\n            type:'date',\r\n            label: 'Date',\r\n            placeholder: '',\r\n            name:'data',\r\n            icon: <SimpleLineIcon name=\"user\" />,\r\n            iconPosition: 'start',\r\n            variant: 'outlined',\r\n            fullWidth: true,\r\n            helperText: ''\r\n        },\r\n        value:'',\r\n        touched: false,\r\n        isValid: false,\r\n        rules:[{\r\n            required: true,\r\n            message: 'Please enter date'\r\n        }]\r\n    },\r\n    timeInput: {\r\n        elType: 'Input',\r\n        elConfig: {\r\n            type:'time',\r\n            label: 'Time',\r\n            placeholder: '',\r\n            name:'time',\r\n            icon: <SimpleLineIcon name=\"user\" />,\r\n            iconPosition: 'start',\r\n            variant: 'outlined',\r\n            fullWidth: true,\r\n            helperText: ''\r\n        },\r\n        value:'',\r\n        touched: false,\r\n        isValid: false,\r\n        rules:[{\r\n            required: true,\r\n            message: 'Please choose time'\r\n        }]\r\n    },\r\n    /*** Select input */\r\n    selectInput: {\r\n        elType: 'Select',\r\n        elConfig: {\r\n            type:'select',\r\n            label: 'Select',\r\n            placeholder: '',\r\n            name:'gender',\r\n            icon: <SimpleLineIcon name=\"user\" />,\r\n            iconPosition: 'start',\r\n            variant: 'outlined',\r\n            fullWidth: true,\r\n            helperText: '',\r\n            options: [\r\n                {\r\n                    value: '',\r\n                    displayValue: 'None'\r\n                },\r\n                {\r\n                    value: 'Opt1',\r\n                    displayValue: 'Option 1'\r\n                },\r\n                {\r\n                    value: 'Opt2',\r\n                    displayValue: 'Option 2'\r\n                }\r\n            ]\r\n        },\r\n        value:'',\r\n        touched: false,\r\n        isValid: false,\r\n        rules:[{\r\n            required: true,\r\n            message: 'Please choose any value'\r\n        }]\r\n    },\r\n    textareaInput: {\r\n        elType: 'Textarea',\r\n        elConfig: {\r\n            label: 'Textarea',\r\n            placeholder: '',\r\n            name:'textarea',\r\n            icon: '',\r\n            iconPosition: 'start',\r\n            variant: 'outlined',\r\n            fullWidth: true,\r\n            helperText: '',\r\n            row: 1,\r\n            rowsMax: 5\r\n        },\r\n        value:'',\r\n        touched: false,\r\n        isValid: false,\r\n        rules:[{\r\n            required: true,\r\n            message: 'Please enter address'\r\n        }]\r\n    },\r\n    checkboxInput: {\r\n        elType: 'Checkbox',\r\n        elConfig: {\r\n            name:'textarea',\r\n            label: 'Checkbox',\r\n            helperText: '',\r\n            options: [{\r\n                label: 'Checkbox',\r\n                checked: false,\r\n                value: 'apple'\r\n            },{\r\n                label: 'Checkbox2',\r\n                checked: false,\r\n                value: 'banana'\r\n            }],\r\n        },\r\n        value:'',\r\n        touched: false,\r\n        isValid: false,\r\n        rules:[{\r\n            required: true,\r\n            message: 'Please check atleast one value'\r\n        }]\r\n    },\r\n    radioInput: {\r\n        elType: 'Radio',\r\n        elConfig: {\r\n            name:'radio',\r\n            label:'Gender',\r\n            labelPlacement:'end',//start, end, top, bottom\r\n            helperText: '',\r\n            options: [{\r\n                label: 'Male',\r\n                checked: false,\r\n                value: 'male'\r\n            },{\r\n                label: 'Female',\r\n                checked: false,\r\n                value: 'female'\r\n            }],\r\n        },\r\n        value:'',\r\n        touched: false,\r\n        isValid: false,\r\n        rules:[{\r\n            required: true,\r\n            message: 'Please choose any value'\r\n        }]\r\n    },\r\n}","import React, { useState } from 'react';\r\n\r\nimport Inputs from '../../ui/Inputs/Inputs';\r\nimport { Card, CardContent, CardActions, Box, Button } from '@material-ui/core';\r\nimport { FormInputs } from './FormInputs';\r\nimport { validate} from '../../validate';\r\n\r\nconst Forms = () => {\r\n    const [formData, setFormData] = useState({\r\n        inputs: FormInputs,\r\n        formIsValid: false\r\n    })\r\n\r\n    const formElements = [];\r\n    let loading = false;\r\n    \r\n    for(let key in formData.inputs){\r\n        formElements.push({\r\n            id: key,\r\n            config: formData.inputs[key]\r\n        })\r\n    }\r\n\r\n    const inputChangeHandler = (event, el) => {\r\n        let changedForm = {\r\n            ...formData.inputs\r\n        }\r\n        let changedFormElement = {\r\n            ...changedForm[el]\r\n        }\r\n        if(changedFormElement.elType === 'Checkbox'){\r\n            let chkOpt = [...changedFormElement.elConfig.options];\r\n            \r\n            let checkedValue = [];\r\n            chkOpt.forEach(opt => {\r\n                if (opt.value === event.target.value){\r\n                    opt.checked =  event.target.checked\r\n                }                  \r\n            })\r\n            chkOpt.forEach(opt => {\r\n                if(opt.checked){\r\n                    checkedValue.push(opt.value);\r\n                }\r\n            });\r\n            \r\n            changedFormElement.value = checkedValue.join(',');\r\n            \r\n\r\n        } else if(changedFormElement.elType === 'Radio'){\r\n            let chkOpt = [...changedFormElement.elConfig.options];\r\n            chkOpt.forEach(opt => {\r\n                if (opt.value === event.target.value){\r\n                    opt.checked =  event.target.checked;\r\n                    changedFormElement.value = event.target.value;\r\n                }else{\r\n                    opt.checked = false;\r\n                }\r\n            })\r\n        }else{\r\n            changedFormElement.value = event.target.value;\r\n        }\r\n        changedFormElement.touched = true;\r\n\r\n        if(changedFormElement.rules === null){\r\n            changedFormElement.isValid = true;\r\n        }else{\r\n            changedFormElement.isValid = (validate(changedFormElement.value, changedFormElement.rules) === '')?true: false;\r\n            changedFormElement.elConfig.helperText = validate(changedFormElement.value, changedFormElement.rules);\r\n        }\r\n        \r\n        changedForm[el] = changedFormElement; \r\n        let formIsValid = true;\r\n        for(let element in changedForm){\r\n            formIsValid = changedForm[element].isValid && formIsValid;\r\n        }\r\n        setFormData({inputs: changedForm, formIsValid: formIsValid});\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Card>\r\n                <CardContent>\r\n                    {\r\n                        formElements.map((v, index) => {\r\n                            return (<Inputs key={v.id} config={v.config} changed={(event) => inputChangeHandler(event, v.id)}/>)\r\n                        })\r\n                    }\r\n                </CardContent>  \r\n                <CardActions>\r\n                    <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"flex-end\" width=\"100%\">\r\n                        <Button variant=\"contained\" color=\"primary\" disabled={!formData.formIsValid || loading } type=\"submit\">\r\n                            {(!loading)?'Submit':'Please wait...'}\r\n                        </Button>  \r\n                    </Box>\r\n                </CardActions>  \r\n            </Card>           \r\n            \r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Forms;","import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\n//import { withSnackbar } from 'material-ui-snackbar-redux';\n\nimport './App.css';\nimport Login from './pages/Login/Login';\nimport Layout from './Layout/Layout';\nimport Dashboard from './pages/Dashboard/Dashboard';\nimport Patients from './pages/Patients/Patients';\nimport Forms from './pages/Forms/Forms';\n\n\nfunction App(props) {\n  //let history = useHistory();\n  //console.log('Auth : '+localStorage.getItem('auth'))\n  //console.log(props);\n  let isAuth = localStorage.getItem('auth');\n  \n\n  \n\n  return (\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" exact render={() => (!isAuth ? <Redirect to=\"/login\" /> : <Redirect to=\"/admin/dashboard\" />)} />\n          <Route path=\"/admin\" exact render={() => (!isAuth ? <Redirect to=\"/login\" /> : <Redirect to=\"/admin/dashboard\" />)} />\n          <Route path='/login' component={Login} />\n          <Route path='/admin' exact component={Layout} />\n          <Layout>\n            <Route path='/admin/dashboard' component={Dashboard} />\n            <Route path='/admin/patients' component={Patients} />\n            <Route path='/admin/forms' component={Forms} />\n          </Layout>\n        </Switch>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updatedObject = (oldObject, updatedProperties)=> {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};","//import * as actionTypes from '../actions/actionTypes';\r\nimport { updatedObject } from '../utility';\r\n//import { auth } from '../actions';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    error:null,\r\n    message: null,\r\n    status: null,\r\n    loading: false\r\n}\r\n\r\nconst authStart = (state, action ) => {\r\n    return updatedObject(state, {token: null, error: null, message: null, status:null, loading: true });\r\n}\r\nconst authSuccess = (state, action ) => {\r\n    return updatedObject(state, {token: action.token, message: action.message, error: null, loading: false, status: action.status });\r\n}\r\nconst authFail = (state, action ) => {\r\n    return updatedObject(state, {error: action.error, message: action.message, loading: false, status: action.status });\r\n}\r\nconst authReset = (state, action ) => {\r\n    return updatedObject(state, {token: null, error: null, message: null, status:null, loading: false });\r\n}\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case 'AUTH_START': return authStart(state, action);\r\n        case 'AUTH_SUCCESS': return authSuccess(state, action);\r\n        case 'AUTH_FAILURE': return authFail(state, action);\r\n        case 'AUTH_RESET': return authReset(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { SnackbarProvider } from 'notistack';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport authReducer from './store/reducer/auth';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  //snackbar: snackbarReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\nReactDOM.render(\n  <Provider store={store}>\n    <SnackbarProvider maxSnack={3} anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'center',\n    }}>\n      <App />\n    </SnackbarProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}