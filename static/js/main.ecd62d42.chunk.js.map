{"version":3,"sources":["constants.js","ui/DrawerLayout/DrawerLayout.js","ui/Theme/Theme.js","Auxiliary/Auxiliary.js","Components/AppointmentTable/AppointmentTable.js","Components/Dashboard/Dashboard.js","Components/Patients/Patients.js","App.js","serviceWorker.js","index.js","assets/images/logo.svg"],"names":["menuList","key","name","route","icon","divider","submenu","useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","nested","paddingLeft","spacing","navWidth","navLink","borderRadius","transition","transitions","create","easing","sharp","duration","enteringScreen","primary","main","color","active","boxShadow","DrawerLayout","props","classes","React","useState","selectedIndex","setSelectedIndex","Drawer","open","variant","onMouseEnter","onHover","onMouseLeave","Toolbar","List","component","className","hoverClass","id","elId","map","menu","index","length","Fragment","ListItem","button","onClick","handleClick","ListItemIcon","ListItemText","Collapse","in","timeout","unmountOnExit","disablePadding","m","i","NavLink","to","Divider","exact","activeClassName","style","fontSize","whiteSpace","createMuiTheme","purple","contrastText","secondary","green","error","red","Aux","children","columns","label","minWidth","align","createData","mobile","appointment_for","date","time","action","rows","IconButton","StyledTableCell","withStyles","head","common","white","black","body","TableCell","container","maxHeight","AppointmentTable","page","setPage","rowsPerPage","setRowsPerPage","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","column","TableBody","slice","row","hover","role","tabIndex","code","value","format","TablePagination","rowsPerPageOptions","count","onChangePage","event","newPage","onChangeRowsPerPage","target","flexGrow","padding","textAlign","text","primaryBg","secondaryBg","infoBg","info","warningBg","warning","options","title","hAxis","vAxis","colors","Dashboard","ThemeProvider","Grid","item","xs","Paper","p","Box","elevation","src","logoImage","mb","marginTop","alignItems","ListItemAvatar","Avatar","Typography","inline","display","flexDirection","justifyContent","Card","minHeight","CardContent","chartType","data","height","legendToggle","class","Patients","mainCont","marginLeft","drawerhover","App","mini","AppBar","position","zIndex","drawer","noWrap","document","getElementById","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","module","exports"],"mappings":"kcAwCaA,G,oCAAW,CACpB,CACIC,IAAK,YACLC,KAAM,YACNC,MAAO,IACPC,KAAM,YACNC,SAAS,EACTC,QAAS,IAEb,CACIL,IAAK,WACLC,KAAM,WACNC,MAAO,YACPC,KAAM,mBACNC,SAAS,EACTC,QAAS,IAEb,CACIL,IAAK,eACLC,KAAM,eACNC,MAAO,gBACPC,KAAM,uBACNC,SAAS,EACTC,QAAS,IAEb,CACIL,IAAK,aACLC,KAAM,aACNC,MAAO,cACPC,KAAM,sBACNC,SAAS,EACTC,QAAS,IAeb,CACIL,IAAK,YACLC,KAAM,YACNC,MAAO,aACPC,KAAM,iBACNC,SAAS,EACTC,QAAS,IAEb,CACIL,IAAK,WACLC,KAAM,WACNC,MAAO,YACPC,KAAM,oBACNC,SAAS,EACTC,QAAS,IAEb,CACIL,IAAK,eACLC,KAAM,eACNC,MAAO,gBACPC,KAAM,2BACNC,SAAS,EACTC,QAAS,IAEb,CACIL,IAAK,OACLC,KAAM,kBACNC,MAAO,QACPC,KAAM,oBACNC,SAAS,EACTC,QAAS,IAEb,CACIL,IAAK,UACLC,KAAM,qBACNC,MAAO,WACPC,KAAM,mBACNC,SAAS,EACTC,QAAS,IAEb,CACIL,IAAK,QACLC,KAAM,mBACNC,MAAO,SACPC,KAAM,mBACNC,SAAS,EACTC,QAAS,MCzHXC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJC,MAAO,OACPC,SAAU,IACVC,gBAAiBJ,EAAMK,QAAQC,WAAWC,OAE5CC,OAAQ,CACNC,YAAaT,EAAMU,QAAQ,IAE7BC,SAAU,CACNT,MDTmB,SCWvBU,QAAS,CACLC,aAAa,gBACbC,WAAYd,EAAMe,YAAYC,OAAO,MAAO,CACxCC,OAAQjB,EAAMe,YAAYE,OAAOC,MACjCC,SAAUnB,EAAMe,YAAYI,SAASC,iBAEzC,UAAW,CACPhB,gBAAiBJ,EAAMK,QAAQgB,QAAQC,KACvCC,MAAO,SAGfC,OAAQ,CAEJC,UAAU,qBAAqBzB,EAAMK,QAAQgB,QAAQC,KACrDC,MAAOvB,EAAMK,QAAQgB,QAAQC,KAAK,cAClCT,aAAa,gBACb,UAAW,CACPT,gBAAiBJ,EAAMK,QAAQgB,QAAQC,KACvCC,MAAO,wBA2EJG,EArEM,SAACC,GAElB,IAAMC,EAAU9B,IAFY,EAIc+B,IAAMC,SAAS,IAJ7B,mBAIrBC,EAJqB,KAINC,EAJM,KAe5B,OACI,kBAACC,EAAA,EAAD,CAAQC,KAAK,OAAOC,QAAQ,YAAYC,aAAcT,EAAMU,QAASC,aAAcX,EAAMU,SACrF,kBAACE,EAAA,EAAD,MAEA,kBAACC,EAAA,EAAD,CAAMC,UAAU,MAAMC,UAAWf,EAAMgB,WAAYC,GAAIjB,EAAMkB,MAEzDtD,EAASuD,KAAI,SAACC,EAAMC,GAAP,OACRD,EAAKlD,QAAQoD,OAAS,EACnB,kBAAC,IAAMC,SAAP,KACI,kBAACC,EAAA,EAAD,CAAU3D,IAAKuD,EAAKtD,KAAM2D,QAAM,EAACC,QAAS,kBAlB9C,SAACL,GAEbhB,EADAD,IAAkBiB,EACD,GAEAA,GAc+CM,CAAYN,KAExD,kBAACO,EAAA,EAAD,KAAc,uBAAGb,UAAWK,EAAKpD,QACjC,kBAAC6D,EAAA,EAAD,CAAcnC,QAAS0B,EAAKtD,OAC1BuD,IAAUjB,EAAiB,kBAAC,IAAD,MAAiB,kBAAC,IAAD,OAElD,kBAAC0B,EAAA,EAAD,CAAUC,GAAIV,IAAUjB,EAAe4B,QAAQ,OAAOC,eAAa,GAC/D,kBAACpB,EAAA,EAAD,CAAMC,UAAU,MAAMoB,gBAAc,GAE5Bd,EAAKlD,QAAQiD,KAAI,SAACgB,EAAGC,GAAJ,OACb,kBAACZ,EAAA,EAAD,CAAU3D,IAAKsE,EAAErE,KAAM2D,QAAM,EAACV,UAAWd,EAAQpB,OAAQiC,UAAWuB,IAASC,GAAIH,EAAEpE,OAI/E,kBAAC8D,EAAA,EAAD,CAAcnC,QAAS,MAAMyC,EAAErE,aAMnD,kBAACyE,EAAA,EAAD,OAGJ,kBAAC,IAAMhB,SAAP,KAEuB,KAAdH,EAAKrD,MACF,kBAACyD,EAAA,EAAD,CAAUC,QAAM,EAAC5D,IAAKuD,EAAKtD,KAAMiD,UAAWd,EAAQhB,QAAS6B,UAAWuB,IAASC,GAAIlB,EAAKrD,MAAOyE,OAAK,EAAEC,gBAAiBxC,EAAQJ,OAAO,WACpI,kBAAC+B,EAAA,EAAD,KAAc,uBAAGb,UAAWK,EAAKpD,KAAK,eAAgB0E,MAAO,CAACC,SAAS,WACvE,kBAACd,EAAA,EAAD,CAAcnC,QAAS0B,EAAKtD,KAAM4E,MAAO,CAACE,WAAW,aAGzD,kBAACpB,EAAA,EAAD,CAAUC,QAAM,EAAC5D,IAAKuD,EAAKtD,KAAMiD,UAAWd,EAAQhB,QAAS6B,UAAWuB,IAASC,GAAIlB,EAAKrD,MAAO0E,gBAAiBxC,EAAQJ,OAAO,WAC7H,kBAAC+B,EAAA,EAAD,KAAc,uBAAGb,UAAWK,EAAKpD,KAAK,kBACtC,kBAAC6D,EAAA,EAAD,CAAcnC,QAAS0B,EAAKtD,KAAM4E,MAAO,CAACE,WAAW,aAG/DxB,EAAKnD,QAAS,kBAACsE,EAAA,EAAD,MAAY,U,2DCvFzClE,EAfDwE,YAAe,CAC3BnE,QAAS,CACPgB,QAAS,CACPC,KAAMmD,IAAO,KACbC,aAAc,QAEhBC,UAAW,CACTrD,KAAMsD,IAAM,MAEdC,MAAO,CACLvD,KAAMwD,IAAI,SCXDC,EAFH,SAAApD,GAAK,OAAIA,EAAMqD,U,2LCerBC,GAAU,CACd,CAAErC,GAAI,OAAQsC,MAAO,OAAQC,SAAU,KACvC,CAAEvC,GAAI,SAAUsC,MAAO,SAAUC,SAAU,KAC3C,CAAEvC,GAAI,kBAAmBsC,MAAO,kBAAmBC,SAAU,IAC7D,CACEvC,GAAI,OACJsC,MAAO,OACPC,SAAU,IACVC,MAAO,SAET,CACExC,GAAI,OACJsC,MAAO,OACPC,SAAU,GACVC,MAAO,SAET,CACExC,GAAI,SACJsC,MAAO,SACPC,SAAU,IACVC,MAAO,UAIX,SAASC,GAAW5F,EAAM6F,EAAOC,EAAiBC,EAAMC,EAAMC,GAC5D,MAAO,CAAEjG,OAAM6F,SAAQC,kBAAiBC,OAAMC,OAAMC,UAGtD,IAAMC,GAAO,CACXN,GAAW,MAAM,iBAAkB,MAAO,cAAe,QAAS,6BAAK,kBAACO,EAAA,EAAD,CAAYrE,MAAM,aAAY,kBAAC,IAAD,CAAgB9B,KAAK,WAAxD,IAAgF,kBAACmG,EAAA,EAAD,CAAYvB,MAAO,CAAC9C,MAAOvB,EAAMK,QAAQwE,MAAMvD,OAAO,kBAAC,IAAD,CAAgB7B,KAAK,aAC7N4F,GAAW,MAAM,iBAAkB,MAAO,cAAe,QAAS,6BAAK,kBAACO,EAAA,EAAD,CAAYrE,MAAM,aAAY,kBAAC,IAAD,CAAgB9B,KAAK,WAAxD,IAAgF,kBAACmG,EAAA,EAAD,CAAYvB,MAAO,CAAC9C,MAAOvB,EAAMK,QAAQwE,MAAMvD,OAAO,kBAAC,IAAD,CAAgB7B,KAAK,aAC7N4F,GAAW,MAAM,iBAAkB,MAAO,cAAe,QAAS,YAClEA,GAAW,MAAM,iBAAkB,MAAO,cAAe,QAAS,YAClEA,GAAW,MAAM,iBAAkB,MAAO,cAAe,QAAS,6BAAK,kBAACO,EAAA,EAAD,CAAYrE,MAAM,aAAY,kBAAC,IAAD,CAAgB9B,KAAK,WAAxD,IAAgF,kBAACmG,EAAA,EAAD,CAAYvB,MAAO,CAAC9C,MAAOvB,EAAMK,QAAQwE,MAAMvD,OAAO,kBAAC,IAAD,CAAgB7B,KAAK,aAC7N4F,GAAW,MAAM,iBAAkB,MAAO,cAAe,QAAS,6BAAK,kBAACO,EAAA,EAAD,CAAYrE,MAAM,aAAY,kBAAC,IAAD,CAAgB9B,KAAK,WAAxD,IAAgF,kBAACmG,EAAA,EAAD,CAAYvB,MAAO,CAAC9C,MAAOvB,EAAMK,QAAQwE,MAAMvD,OAAO,kBAAC,IAAD,CAAgB7B,KAAK,cAGzNoG,GAAkBC,aAAW,SAAC9F,GAAD,MAAY,CAC3C+F,KAAM,CACJ3F,gBAAiBJ,EAAMK,QAAQ2F,OAAOC,MACtC1E,MAAOvB,EAAMK,QAAQ2F,OAAOE,OAE9BC,KAAM,CACJ7B,SAAU,OANQwB,CAQpBM,KAEEtG,GAAYC,YAAW,CAC3BE,KAAM,CACJC,MAAO,QAETmG,UAAW,CACTC,UAAW,KAEbzB,MAAO,CACLtD,MAAOvB,EAAMK,QAAQwE,MAAMvD,QAIhB,SAASiF,KACtB,IAAM3E,EAAU9B,KADyB,EAEjB+B,IAAMC,SAAS,GAFE,mBAElC0E,EAFkC,KAE5BC,EAF4B,OAGH5E,IAAMC,SAAS,IAHZ,mBAGlC4E,EAHkC,KAGrBC,EAHqB,KAczC,OACE,yBAAKjE,UAAWd,EAAQ3B,MACtB,kBAAC2G,GAAA,EAAD,CAAgBlE,UAAWd,EAAQyE,WACjC,kBAACQ,EAAA,EAAD,CAAOC,cAAY,EAACC,aAAW,gBAC7B,kBAACC,GAAA,EAAD,CAAWzF,MAAM,WACf,kBAAC0F,GAAA,EAAD,KACGhC,GAAQnC,KAAI,SAACoE,GAAD,OACX,kBAACrB,GAAD,CACErG,IAAK0H,EAAOtE,GACZwC,MAAO8B,EAAO9B,MACdf,MAAO,CAAEc,SAAU+B,EAAO/B,WAEzB+B,EAAOhC,YAKhB,kBAACiC,EAAA,EAAD,KACGxB,GAAKyB,MAAMZ,EAAOE,EAAaF,EAAOE,EAAcA,GAAa5D,KAAI,SAACuE,GACrE,OACE,kBAACJ,GAAA,EAAD,CAAUK,OAAK,EAACC,KAAK,WAAWC,UAAW,EAAGhI,IAAK6H,EAAII,MACpDxC,GAAQnC,KAAI,SAACoE,GACZ,IAAMQ,EAAQL,EAAIH,EAAOtE,IACzB,OACE,kBAACwD,EAAA,EAAD,CAAW5G,IAAK0H,EAAOtE,GAAIwC,MAAO8B,EAAO9B,OACtC8B,EAAOS,QAA2B,kBAAVD,EAAqBR,EAAOS,OAAOD,GAASA,aAUvF,kBAACE,GAAA,EAAD,CACEC,mBAAoB,CAAC,GAAI,GAAI,KAC7BpF,UAAU,MACVqF,MAAOnC,GAAK1C,OACZyD,YAAaA,EACbF,KAAMA,EACNuB,aAlDmB,SAACC,EAAOC,GAC/BxB,EAAQwB,IAkDJC,oBA/C0B,SAACF,GAC/BrB,GAAgBqB,EAAMG,OAAOT,OAC7BjB,EAAQ,OCvEZ,IAAM3G,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJmI,SAAU,GAEZ7H,MAAO,CACL8H,QAASrI,EAAMU,QAAQ,GACvB4H,UAAW,SACX/G,MAAOvB,EAAMK,QAAQkI,KAAK5D,WAE5B6D,UAAW,CACPpI,gBAAiBJ,EAAMK,QAAQgB,QAAQC,KACvCC,MAAMvB,EAAMK,QAAQgB,QAAQqD,cAEhC+D,YAAa,CACTrI,gBAAiBJ,EAAMK,QAAQsE,UAAUrD,MAE7CoH,OAAQ,CACJtI,gBAAiBJ,EAAMK,QAAQsI,KAAKrH,MAExCsH,UAAW,CACPxI,gBAAiBJ,EAAMK,QAAQwI,QAAQvH,UAIzCwH,GAAU,CACZC,MAAO,qBACPC,MAAO,CAAED,MAAO,QAChBE,MAAO,CAAEF,MAAO,WAChBG,OAAO,CAAC,UAAW,UAAW,YAwSnBC,GApSG,WACd,IAAMvH,EAAU9B,KAShB,OACI,kBAAC,EAAD,KACI,kBAACsJ,EAAA,EAAD,CAAepJ,MAAOA,GAClB,kBAACqJ,EAAA,EAAD,CAAMhD,WAAS,EAAC3F,QAAS,GACrB,kBAAC2I,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACC,EAAA,EAAD,CAAOC,EAAG,EAAG/G,UAAWd,EAAQrB,MAAO,gBACnC,kBAACmJ,EAAA,EAAD,CAAKjH,UAAU,MAAMC,UAAW,iBAAkBiH,UAAW,GACzD,yBAAKC,IAAKC,OAEd,kBAACH,EAAA,EAAD,CAAKjH,UAAU,KAAKqB,EAAG,GAAvB,+BAGA,kBAAC4F,EAAA,EAAD,CAAKjH,UAAU,IAAIqH,GAAI,GAAvB,+CACA,kBAACT,EAAA,EAAD,CAAMhD,WAAS,GACX,kBAACgD,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,0BAAM7G,UAAU,aAAhB,OACA,0CAEJ,kBAAC2G,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IAGf,kBAACF,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,0BAAM7G,UAAU,aAAhB,QACA,+CAEJ,kBAAC2G,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IAEf,kBAACF,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,0BAAM7G,UAAU,aAAhB,SACA,2CAKZ,kBAAC8G,EAAA,EAAD,CAAOnF,MAAO,CAAC0F,UAAU,QAASrH,UAAWd,EAAQrB,OACjD,kBAACmJ,EAAA,EAAD,CAAKjH,UAAU,KAAKqB,EAAG,GAAvB,kBAGA,kBAAC4F,EAAA,EAAD,CAAKjH,UAAU,MAAMqH,GAAI,GACrB,kBAACtH,EAAA,EAAD,CAAME,UAAWd,EAAQ3B,MACrB,kBAACkD,EAAA,EAAD,CAAU6G,WAAW,cACjB,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAQN,IAAKC,OAEb,kBAACrG,EAAA,EAAD,CACAnC,QAAQ,8BACRsD,UACI,kBAAC,IAAMzB,SAAP,KACA,kBAACiH,EAAA,EAAD,CACI1H,UAAU,OACVN,QAAQ,QACRO,UAAWd,EAAQwI,OACnB7I,MAAM,eAJV,OAQC,2EACD,kBAACmI,EAAA,EAAD,CAAKW,QAAQ,OAAOC,cAAc,MAAMC,eAAe,WAAWlG,MAAO,CAACnE,MAAM,SAC5E,kBAAC0F,EAAA,EAAD,KACI,kBAAC,IAAD,CAAgBnG,KAAK,WAEzB,kBAACmG,EAAA,EAAD,KACI,kBAAC,IAAD,CAAgBnG,KAAK,mBAOrC,kBAACyE,EAAA,EAAD,MACA,kBAACf,EAAA,EAAD,CAAU6G,WAAW,cACjB,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAQN,IAAKC,OAEb,kBAACrG,EAAA,EAAD,CACAnC,QAAQ,8BACRsD,UACI,kBAAC,IAAMzB,SAAP,KACA,kBAACiH,EAAA,EAAD,CACI1H,UAAU,OACVN,QAAQ,QACRO,UAAWd,EAAQwI,OACnB7I,MAAM,eAJV,OAQC,2EACD,kBAACmI,EAAA,EAAD,CAAKW,QAAQ,OAAOC,cAAc,MAAMC,eAAe,WAAWlG,MAAO,CAACnE,MAAM,SAC5E,kBAAC0F,EAAA,EAAD,KACI,kBAAC,IAAD,CAAgBnG,KAAK,WAEzB,kBAACmG,EAAA,EAAD,KACI,kBAAC,IAAD,CAAgBnG,KAAK,mBAOrC,kBAACyE,EAAA,EAAD,MACA,kBAACf,EAAA,EAAD,CAAU6G,WAAW,cACjB,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAQN,IAAKC,OAEb,kBAACrG,EAAA,EAAD,CACAnC,QAAQ,8BACRsD,UACI,kBAAC,IAAMzB,SAAP,KACA,kBAACiH,EAAA,EAAD,CACI1H,UAAU,OACVN,QAAQ,QACRO,UAAWd,EAAQwI,OACnB7I,MAAM,eAJV,OAQC,2EACD,kBAACmI,EAAA,EAAD,CAAKW,QAAQ,OAAOC,cAAc,MAAMC,eAAe,WAAWlG,MAAO,CAACnE,MAAM,SAC5E,kBAAC0F,EAAA,EAAD,KACI,kBAAC,IAAD,CAAgBnG,KAAK,WAEzB,kBAACmG,EAAA,EAAD,KACI,kBAAC,IAAD,CAAgBnG,KAAK,mBAOrC,kBAACyE,EAAA,EAAD,SAMZ,kBAACsF,EAAA,EAAD,CAAOnF,MAAO,CAAC0F,UAAU,QAASrH,UAAWd,EAAQrB,OACjD,kBAACmJ,EAAA,EAAD,CAAKjH,UAAU,KAAKqB,EAAG,GAAvB,aAGA,kBAAC4F,EAAA,EAAD,CAAKjH,UAAU,MAAMqH,GAAI,GACrB,kBAACtH,EAAA,EAAD,CAAME,UAAWd,EAAQ3B,MACrB,kBAACkD,EAAA,EAAD,CAAU6G,WAAW,cACjB,kBAACxG,EAAA,EAAD,CACAnC,QAAQ,4BACRsD,UACI,kBAAC,IAAMzB,SAAP,KACA,kBAACiH,EAAA,EAAD,CACI1H,UAAU,OACVN,QAAQ,QACRO,UAAWd,EAAQwI,OACnB7I,MAAM,eAJV,UAQC,sCAKT,kBAAC2C,EAAA,EAAD,MACA,kBAACf,EAAA,EAAD,CAAU6G,WAAW,cACjB,kBAACxG,EAAA,EAAD,CACAnC,QAAQ,wCACRsD,UACI,kBAAC,IAAMzB,SAAP,KACA,kBAACiH,EAAA,EAAD,CACI1H,UAAU,OACVN,QAAQ,QACRO,UAAWd,EAAQwI,OACnB7I,MAAM,eAJV,OAQC,4DAKT,kBAAC2C,EAAA,EAAD,MACA,kBAACf,EAAA,EAAD,CAAU6G,WAAW,cACjB,kBAACxG,EAAA,EAAD,CACAnC,QAAQ,gCACRsD,UACI,kBAAC,IAAMzB,SAAP,KACA,kBAACiH,EAAA,EAAD,CACI1H,UAAU,OACVN,QAAQ,QACRO,UAAWd,EAAQwI,OACnB7I,MAAM,eAJV,qDAYR,kBAAC2C,EAAA,EAAD,UAMhB,kBAACmF,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACF,EAAA,EAAD,CAAMhD,WAAS,EAAC3F,QAAS,GACrB,kBAAC2I,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACG,EAAA,EAAD,CAAKjH,UAAU,MAAMC,UAAW,aAC5B,kBAACgH,EAAA,EAAD,CAAKjH,UAAU,MAAMC,UAAWd,EAAQ4G,UAAW,cAC/C,kBAACkB,EAAA,EAAD,CAAKjH,UAAU,OAAOC,UAAU,YAAW,uBAAGA,UAAU,iBACxD,kBAACgH,EAAA,EAAD,CAAKjH,UAAU,MAAMC,UAAU,iBAC3B,kBAACgH,EAAA,EAAD,CAAKjH,UAAU,KAAKC,UAAU,aAA9B,MACA,kBAACgH,EAAA,EAAD,CAAKjH,UAAU,IAAIqB,EAAG,EAAGpB,UAAU,aAAnC,2BAKhB,kBAAC2G,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACG,EAAA,EAAD,CAAKjH,UAAU,MAAMC,UAAW,aAC5B,kBAACgH,EAAA,EAAD,CAAKjH,UAAU,MAAMC,UAAWd,EAAQ6G,YAAa,cACjD,kBAACiB,EAAA,EAAD,CAAKjH,UAAU,OAAOC,UAAU,YAAW,uBAAGA,UAAU,iBACxD,kBAACgH,EAAA,EAAD,CAAKjH,UAAU,MAAMC,UAAU,iBAC3B,kBAACgH,EAAA,EAAD,CAAKjH,UAAU,KAAKC,UAAU,aAA9B,MACA,kBAACgH,EAAA,EAAD,CAAKjH,UAAU,IAAIqB,EAAG,EAAGpB,UAAU,aAAnC,0BAKhB,kBAAC2G,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACG,EAAA,EAAD,CAAKjH,UAAU,MAAMC,UAAW,aAC5B,kBAACgH,EAAA,EAAD,CAAKjH,UAAU,MAAMC,UAAWd,EAAQ8G,OAAQ,cAC5C,kBAACgB,EAAA,EAAD,CAAKjH,UAAU,OAAOC,UAAU,YAAW,uBAAGA,UAAU,iBACxD,kBAACgH,EAAA,EAAD,CAAKjH,UAAU,MAAMC,UAAU,iBAC3B,kBAACgH,EAAA,EAAD,CAAKjH,UAAU,KAAKC,UAAU,aAA9B,OACA,kBAACgH,EAAA,EAAD,CAAKjH,UAAU,IAAIqB,EAAG,EAAGpB,UAAU,aAAnC,cAKhB,kBAAC2G,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACG,EAAA,EAAD,CAAKjH,UAAU,MAAMC,UAAW,aAC5B,kBAACgH,EAAA,EAAD,CAAKjH,UAAU,MAAMC,UAAWd,EAAQgH,UAAW,cAC/C,kBAACc,EAAA,EAAD,CAAKjH,UAAU,OAAOC,UAAU,YAAW,uBAAGA,UAAU,iBACxD,kBAACgH,EAAA,EAAD,CAAKjH,UAAU,MAAMC,UAAU,iBAC3B,kBAACgH,EAAA,EAAD,CAAKjH,UAAU,KAAKC,UAAU,aAA9B,OACA,kBAACgH,EAAA,EAAD,CAAKjH,UAAU,IAAIqB,EAAG,EAAGpB,UAAU,aAAnC,qBAKhB,kBAAC2G,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAACiB,EAAA,EAAD,CAAMnG,MAAO,CAACoG,UAAU,UACpB,kBAACC,EAAA,EAAD,KACA,kBAAC,IAAD,CACIC,UAAU,YACVC,KArQvB,CACT,CAAC,OAAQ,kBAAmB,kBAAmB,kBAC/C,CAAC,OAAQ,MAAO,KAAM,OACtB,CAAC,OAAQ,MAAO,IAAM,MACtB,CAAC,OAAQ,IAAO,KAAO,OACvB,CAAC,OAAQ,MAAO,KAAO,MAiQS9B,QAASA,GACT5I,MAAM,OACN2K,OAAO,QACPC,cAAY,OAMxB,kBAACzB,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAACiB,EAAA,EAAD,CAAMnG,MAAO,CAACoG,UAAU,UACpB,kBAACC,EAAA,EAAD,CAAaK,MAAOnJ,EAAQrB,OACxB,kBAACmJ,EAAA,EAAD,CAAKjH,UAAU,KAAKqB,EAAG,EAAGO,MAAO,CAACiE,UAAU,SAA5C,uBAGA,kBAAC/B,GAAD,eC7TzByE,GARE,WACb,OACI,0CCiBFlL,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,OACPC,SAAU,IACVC,gBAAiBJ,EAAMK,QAAQC,WAAWC,OAE5CC,OAAQ,CACNC,YAAaT,EAAMU,QAAQ,IAE7BC,SAAU,CACNT,MPnBqB,SOqBzB+K,SAAU,CACRC,WAAW,OACXpK,WAAYd,EAAMe,YAAYC,OAAO,cAAe,CAChDC,OAAQjB,EAAMe,YAAYE,OAAOC,MACjCC,SAAUnB,EAAMe,YAAYI,SAASC,kBAG3C+J,YAAa,CACTjL,MAAM,OACNY,WAAYd,EAAMe,YAAYC,OAAO,QAAS,CAC1CC,OAAQjB,EAAMe,YAAYE,OAAOC,MACjCC,SAAUnB,EAAMe,YAAYI,SAASC,sBA4EhCgK,OAjEf,WACE,IAAMxJ,EAAU9B,KAEZuL,GAAO,EAHE,EAKuBvJ,mBAAS,CACzCwF,OAAO,IANE,mBAyBb,OAzBa,UA0BT,kBAAC,IAAD,KACE,kBAAC8B,EAAA,EAAD,CAAepJ,MAAOA,GACpB,kBAACsL,EAAA,EAAD,CAAQ/J,MAAM,OAAOgK,SAAS,QAAQlH,MAAO,CAACmH,OAAQxL,EAAMwL,OAAOC,OAAS,GAAK9B,UAAW,GAC1F,kBAACpH,EAAA,EAAD,KAIE,kBAACmH,EAAA,EAAD,CAAKW,QAAQ,OAAOC,cAAc,MAAMC,eAAe,gBAAgBlG,MAAO,CAACnE,MAAM,SACnF,kBAACiK,EAAA,EAAD,CAAYhI,QAAQ,KAAKuJ,QAAM,GAA/B,QAGA,kBAAChC,EAAA,EAAD,CAAKjH,UAAU,OACb,kBAACmD,EAAA,EAAD,KACE,kBAAC,IAAD,CAAgBnG,KAAK,UAEvB,kBAACmG,EAAA,EAAD,KACE,kBAAC,IAAD,CAAgBnG,KAAK,cAEvB,kBAACmG,EAAA,EAAD,KACE,kBAAC,IAAD,CAAgBnG,KAAK,gBAO/B,kBAAC8C,EAAA,EAAD,MACA,kBAAC,EAAD,CAAcI,WAAYf,EAAQuJ,YAAatI,KAAK,WAAWR,QA5CnD,WACfgJ,GACCM,SAASC,eAAe,YAAYvH,MAAMnE,MAAQ,QAClDyL,SAASC,eAAe,YAAYvH,MAAM6G,WAAa,QAEvDG,GAAK,IAELM,SAASC,eAAe,YAAYvH,MAAMnE,MAAQ,OAClDyL,SAASC,eAAe,YAAYvH,MAAM6G,WAAa,OACvDG,GAAK,MAoCH,0BAAM3I,UAAWd,EAAQqJ,SAAUrI,GAAG,YACpC,kBAAC,IAAD,CAAOiJ,KAAK,IAAI1H,OAAK,EAAC1B,UAAW0G,KACjC,kBAAC,IAAD,CAAO0C,KAAK,YAAYpJ,UAAWuI,SCnG3Bc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFV,SAASC,eAAe,SDyHpB,kBAAmBU,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA/H,GACLgI,QAAQhI,MAAMA,EAAMiI,a,mBEzI5BC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.ecd62d42.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\nimport ContactsIcon from '@material-ui/icons/Contacts';\r\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\r\n\r\nexport const base_url = \"\";\r\nexport const drawerWidth = '240px';\r\n\r\nexport const getIcon = (icon) => {\r\n    switch(icon) {\r\n        case 'HomeIcon':\r\n            return (<i className=\"ico icon-home\"></i>);\r\n        case 'ContactsIcon':\r\n            return (<i className=\"ico icon-patient\"></i>);\r\n        case 'PlaylistAddCheckIcon':\r\n            return (<PlaylistAddCheckIcon/>);\r\n        case 'PeopleAltIcon':\r\n            return (<PeopleAltIcon/>);\r\n        case 'ScheduleIcon':\r\n            return (<ScheduleIcon/>);\r\n        case 'FileCopyIcon':\r\n            return (<FileCopyIcon/>);\r\n        case 'PaymentIcon':\r\n            return (<PaymentIcon/>);\r\n        case 'AccountTreeIcon':\r\n            return (<AccountTreeIcon/>);\r\n      default:\r\n        return ('');\r\n    }\r\n}\r\n\r\n\r\n\r\n/** Menu list  */\r\nexport const menuList = [\r\n    {\r\n        key: 'dashboard',\r\n        name: 'Dashboard',\r\n        route: '/',\r\n        icon: 'icon-home',\r\n        divider: false,\r\n        submenu: []\r\n    },\r\n    {\r\n        key: 'patients',\r\n        name: 'Patients',\r\n        route: '/patients',\r\n        icon: 'ico icon-patient',\r\n        divider: false,\r\n        submenu: []\r\n    },\r\n    {\r\n        key: 'appointments',\r\n        name: 'Appointments',\r\n        route: '/appointments',\r\n        icon: 'ico icon-appointment',\r\n        divider: true,\r\n        submenu: []\r\n    },\r\n    {\r\n        key: 'laboratory',\r\n        name: 'Laboratory',\r\n        route: '/laboratory',\r\n        icon: 'ico icon-laboratory',\r\n        divider: false,\r\n        submenu: []/* [\r\n            {\r\n                key: 'allappointments',\r\n                name: 'All Appointments',\r\n                route: '/appointments/all',\r\n                icon: 'PlaylistAddCheckIcon'\r\n            },\r\n            {\r\n                key: 'addappointments',\r\n                name: 'Add Appointments',\r\n                route: '/appointments/add',\r\n                icon: 'PlaylistAddCheckIcon'\r\n            },\r\n        ] */\r\n    },\r\n    {\r\n        key: 'radiology',\r\n        name: 'Radiology',\r\n        route: '/radiology',\r\n        icon: 'ico icon-x-ray',\r\n        divider: false,\r\n        submenu: []\r\n    },\r\n    {\r\n        key: 'pharmacy',\r\n        name: 'Pharmacy',\r\n        route: '/pharmacy',\r\n        icon: 'ico icon-medicine',\r\n        divider: true,\r\n        submenu: []\r\n    },\r\n    {\r\n        key: 'patient-pool',\r\n        name: 'Patient pool',\r\n        route: '/patient-pool',\r\n        icon: 'ico icon-data-collection',\r\n        divider: false,\r\n        submenu: []\r\n    },\r\n    {\r\n        key: 'ward',\r\n        name: 'Ward management',\r\n        route: '/ward',\r\n        icon: 'ico icon-hospital',\r\n        divider: false,\r\n        submenu: []\r\n    },\r\n    {\r\n        key: 'billing',\r\n        name: 'Billing management',\r\n        route: '/billing',\r\n        icon: 'ico icon-invoice',\r\n        divider: true,\r\n        submenu: []\r\n    },\r\n    {\r\n        key: 'staff',\r\n        name: 'Staff management',\r\n        route: '/staff',\r\n        icon: 'ico icon-id-card',\r\n        divider: false,\r\n        submenu: []\r\n    },\r\n]","import React, { useState } from 'react';\r\nimport { Router,Link, NavLink  } from 'react-router-dom'\r\n\r\nimport { Toolbar, Drawer, List, ListItem, ListItemIcon, ListItemText, Divider, Collapse } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\nimport { menuList, drawerWidth, getIcon } from '../../constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    nested: {\r\n      paddingLeft: theme.spacing(4),\r\n    },\r\n    navWidth: {\r\n        width:drawerWidth\r\n    },\r\n    navLink: {\r\n        borderRadius:\"0 42px 42px 0\",\r\n        transition: theme.transitions.create('all', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        \"&:hover\": {\r\n            backgroundColor: theme.palette.primary.main,\r\n            color: '#fff',\r\n        }\r\n    },\r\n    active: {\r\n        //backgroundColor: theme.palette.primary.main,\r\n        boxShadow:\"6px 0px 0px inset \"+theme.palette.primary.main,\r\n        color: theme.palette.primary.main+' !important',\r\n        borderRadius:\"0 42px 42px 0\",\r\n        \"&:hover\": {\r\n            backgroundColor: theme.palette.primary.main,\r\n            color: '#fff !important',\r\n            \r\n        }\r\n    }\r\n}));\r\n\r\nconst DrawerLayout = (props) => {\r\n\r\n    const classes = useStyles();\r\n   \r\n    const [selectedIndex, setSelectedIndex] = React.useState(\"\")\r\n\r\n    const handleClick = (index)  => {\r\n        if (selectedIndex === index) {\r\n            setSelectedIndex(\"\")\r\n        } else {\r\n            setSelectedIndex(index)\r\n        }\r\n    }\r\n   \r\n\r\n    return(\r\n        <Drawer open=\"true\" variant=\"permanent\" onMouseEnter={props.onHover} onMouseLeave={props.onHover}>\r\n            <Toolbar />\r\n\r\n            <List component=\"nav\" className={props.hoverClass} id={props.elId}/*  className={classes.navWidth} */>\r\n            {\r\n                menuList.map((menu, index) => (\r\n                    (menu.submenu.length > 0)?\r\n                        <React.Fragment>\r\n                            <ListItem key={menu.name} button onClick={() => handleClick(index)}>\r\n                                {/* <ListItemIcon>{getIcon(menu.icon)}</ListItemIcon> */}\r\n                                <ListItemIcon><i className={menu.icon}></i></ListItemIcon>\r\n                                <ListItemText primary={menu.name} />\r\n                                {(index === selectedIndex) ? <ExpandLess /> : <ExpandMore />}\r\n                            </ListItem>\r\n                            <Collapse in={index === selectedIndex} timeout=\"auto\" unmountOnExit>\r\n                                <List component=\"div\" disablePadding>\r\n                                    {\r\n                                        menu.submenu.map((m, i) => (\r\n                                            <ListItem key={m.name} button className={classes.nested} component={NavLink} to={m.route}>\r\n                                                {/* <ListItemIcon>\r\n                                                    {getIcon(m.icon)}\r\n                                                </ListItemIcon> */}\r\n                                                <ListItemText primary={'-- '+m.name} />\r\n                                            </ListItem>\r\n                                        ))\r\n                                    }\r\n                                </List>\r\n                            </Collapse>\r\n                            <Divider />\r\n                        </React.Fragment> \r\n                    :\r\n                        <React.Fragment>\r\n                            {\r\n                                (menu.route == '/')?\r\n                                    <ListItem button key={menu.name} className={classes.navLink} component={NavLink} to={menu.route} exact  activeClassName={classes.active+' active'}>\r\n                                        <ListItemIcon><i className={menu.icon+' navLinkIcon'} style={{fontSize:'24px'}}></i></ListItemIcon>\r\n                                        <ListItemText primary={menu.name} style={{whiteSpace:'nowrap'}} />\r\n                                    </ListItem>\r\n                                :\r\n                                    <ListItem button key={menu.name} className={classes.navLink} component={NavLink} to={menu.route} activeClassName={classes.active+' active'}>\r\n                                        <ListItemIcon><i className={menu.icon+' navLinkIcon'}></i></ListItemIcon>\r\n                                        <ListItemText primary={menu.name} style={{whiteSpace:'nowrap'}} />\r\n                                    </ListItem>\r\n                            }\r\n                            {(menu.divider)?<Divider />:''}\r\n                        </React.Fragment>\r\n                ))\r\n            }\r\n            </List>\r\n          </Drawer>\r\n    );\r\n}\r\n\r\nexport default DrawerLayout;","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport green from '@material-ui/core/colors/green';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: purple[500],\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      main: green[500],\r\n    },\r\n    error: {\r\n      main: red[500]\r\n    }\r\n  }\r\n});\r\n\r\nexport default theme;","import React from  'react';\r\n\r\nconst Aux = props => props.children;\r\n\r\nexport default Aux;","import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport theme from '../../ui/Theme/Theme';\r\n\r\nimport SimpleLineIcon from 'react-simple-line-icons';\r\n\r\nconst columns = [\r\n  { id: 'name', label: 'Name', minWidth: 170 },\r\n  { id: 'mobile', label: 'Mobile', minWidth: 100},\r\n  { id: 'appointment_for', label: 'Appointment For', minWidth: 50 },\r\n  {\r\n    id: 'date',\r\n    label: 'Date',\r\n    minWidth: 100,\r\n    align: 'right',\r\n  },\r\n  {\r\n    id: 'time',\r\n    label: 'Time',\r\n    minWidth: 50,\r\n    align: 'right',\r\n  },\r\n  {\r\n    id: 'action',\r\n    label: 'Action',\r\n    minWidth: 170,\r\n    align: 'right',\r\n  },\r\n];\r\n\r\nfunction createData(name, mobile,appointment_for, date, time, action) {\r\n  return { name, mobile, appointment_for, date, time, action };\r\n}\r\n\r\nconst rows = [\r\n  createData('Raj','+91-9876543210', 'Dog', '15/Aug/2020', '02:00', <div><IconButton color=\"secondary\"><SimpleLineIcon name=\"check\" /></IconButton> <IconButton style={{color: theme.palette.error.main}}><SimpleLineIcon name=\"close\" /></IconButton></div>),\r\n  createData('Raj','+91-9876543210', 'Dog', '15/Aug/2020', '02:30', <div><IconButton color=\"secondary\"><SimpleLineIcon name=\"check\" /></IconButton> <IconButton style={{color: theme.palette.error.main}}><SimpleLineIcon name=\"close\" /></IconButton></div>),\r\n  createData('Raj','+91-9876543210', 'Dog', '15/Aug/2020', '03:00', 'Approved'),\r\n  createData('Raj','+91-9876543210', 'Dog', '15/Aug/2020', '03:20', 'Rejected'),\r\n  createData('Raj','+91-9876543210', 'Dog', '15/Aug/2020', '04:00', <div><IconButton color=\"secondary\"><SimpleLineIcon name=\"check\" /></IconButton> <IconButton style={{color: theme.palette.error.main}}><SimpleLineIcon name=\"close\" /></IconButton></div>),\r\n  createData('Raj','+91-9876543210', 'Dog', '15/Aug/2020', '05:45', <div><IconButton color=\"secondary\"><SimpleLineIcon name=\"check\" /></IconButton> <IconButton style={{color: theme.palette.error.main}}><SimpleLineIcon name=\"close\" /></IconButton></div>),\r\n];\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.white,\r\n      color: theme.palette.common.black,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n  error: {\r\n    color: theme.palette.error.main\r\n  }\r\n});\r\n\r\nexport default function AppointmentTable() {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead color=\"primary\">\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <StyledTableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </StyledTableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport logoImage from '../../assets/images/logo.svg';\r\n\r\nimport { Grid, Paper, Box, CardContent, Card,List, ListItem, ListItemAvatar, ListItemText, Divider, Typography, Avatar, IconButton } from '@material-ui/core';\r\nimport {ThemeProvider, makeStyles } from '@material-ui/core/styles';\r\nimport SimpleLineIcon from 'react-simple-line-icons';\r\n\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nimport theme from '../../ui/Theme/Theme';\r\n\r\nimport './Dashboard.css';\r\n\r\nimport Aux from '../../Auxiliary/Auxiliary';\r\nimport AppointmentTable from '../AppointmentTable/AppointmentTable';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    primaryBg: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        color:theme.palette.primary.contrastText,\r\n    },\r\n    secondaryBg: {\r\n        backgroundColor: theme.palette.secondary.main\r\n    },\r\n    infoBg: {\r\n        backgroundColor: theme.palette.info.main\r\n    },\r\n    warningBg: {\r\n        backgroundColor: theme.palette.warning.main\r\n    }\r\n}));\r\n\r\nconst options = {\r\n    title: \"Revenue comparison\",\r\n    hAxis: { title: \"Year\", },\r\n    vAxis: { title: \"Revenue\",},\r\n    colors:['#ff9800', '#2196f3', '#4caf50'],\r\n    //legend: \"none\"\r\n};\r\n\r\nconst Dashboard = () => {\r\n    const classes = useStyles();\r\n    const data = [\r\n        [\"Year\", \"Hospital Income\", 'Pharmacy Income', 'Stock Expenses'],\r\n        ['2017', 12300, 8945, 12005],\r\n        ['2018', 24030, 6000, 5600],\r\n        ['2019', 30000, 21000, 20005],\r\n        ['2020', 50233, 45000, 10000],\r\n      ];\r\n\r\n    return(\r\n        <Aux>\r\n            <ThemeProvider theme={theme}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={3}>\r\n                        <Paper p={2} className={classes.paper +' profileCard'}>\r\n                            <Box component=\"div\" className={\"profileCardImg\"} elevation={2}>\r\n                                <img src={logoImage} />\r\n                            </Box>\r\n                            <Box component=\"h3\" m={1}>\r\n                                Dr. Radhakrishnan. MBBS,PhD\r\n                            </Box>\r\n                            <Box component=\"p\" mb={2}>Specialist in Veterinary treatment for pets</Box>\r\n                            <Grid container>\r\n                                <Grid item xs={3}>\r\n                                    <span className=\"countSpan\">206</span>\r\n                                    <span>Clients</span>\r\n                                </Grid>\r\n                                <Grid item xs={1}>\r\n                                </Grid>\r\n                                \r\n                                <Grid item xs={4}>\r\n                                    <span className=\"countSpan\">1282</span>\r\n                                    <span>Appointments</span>\r\n                                </Grid>\r\n                                <Grid item xs={1}>\r\n                                </Grid>\r\n                                <Grid item xs={3}>\r\n                                    <span className=\"countSpan\">4.8/5</span>\r\n                                    <span>Rating</span>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n\r\n                        <Paper style={{marginTop:'16px'}} className={classes.paper}>\r\n                            <Box component=\"h4\" m={1}>\r\n                                Recent queries\r\n                            </Box>\r\n                            <Box component=\"div\" mb={2}>\r\n                                <List className={classes.root}>\r\n                                    <ListItem alignItems=\"flex-start\">\r\n                                        <ListItemAvatar>\r\n                                        <Avatar src={logoImage} />\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText\r\n                                        primary=\"Is home visit is available?\"\r\n                                        secondary={\r\n                                            <React.Fragment>\r\n                                            <Typography \r\n                                                component=\"span\"\r\n                                                variant=\"body2\"\r\n                                                className={classes.inline}\r\n                                                color=\"textPrimary\"\r\n                                            >\r\n                                                Raj\r\n                                            </Typography>\r\n                                            {\" — I am looking for a home visit, is this available please reply me\"}\r\n                                            <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"flex-end\" style={{width:'100%'}}>\r\n                                                <IconButton>\r\n                                                    <SimpleLineIcon name=\"phone\" />\r\n                                                </IconButton>\r\n                                                <IconButton>\r\n                                                    <SimpleLineIcon name=\"envelope\" />\r\n                                                </IconButton>\r\n                                            </Box>\r\n                                            </React.Fragment>\r\n                                        }\r\n                                        />\r\n                                    </ListItem>\r\n                                    <Divider />\r\n                                    <ListItem alignItems=\"flex-start\">\r\n                                        <ListItemAvatar>\r\n                                        <Avatar src={logoImage} />\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText\r\n                                        primary=\"Is home visit is available?\"\r\n                                        secondary={\r\n                                            <React.Fragment>\r\n                                            <Typography \r\n                                                component=\"span\"\r\n                                                variant=\"body2\"\r\n                                                className={classes.inline}\r\n                                                color=\"textPrimary\"\r\n                                            >\r\n                                                Raj\r\n                                            </Typography>\r\n                                            {\" — I am looking for a home visit, is this available please reply me\"}\r\n                                            <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"flex-end\" style={{width:'100%'}}>\r\n                                                <IconButton>\r\n                                                    <SimpleLineIcon name=\"phone\" />\r\n                                                </IconButton>\r\n                                                <IconButton>\r\n                                                    <SimpleLineIcon name=\"envelope\" />\r\n                                                </IconButton>\r\n                                            </Box>\r\n                                            </React.Fragment>\r\n                                        }\r\n                                        />\r\n                                    </ListItem>\r\n                                    <Divider />\r\n                                    <ListItem alignItems=\"flex-start\">\r\n                                        <ListItemAvatar>\r\n                                        <Avatar src={logoImage} />\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText\r\n                                        primary=\"Is home visit is available?\"\r\n                                        secondary={\r\n                                            <React.Fragment>\r\n                                            <Typography \r\n                                                component=\"span\"\r\n                                                variant=\"body2\"\r\n                                                className={classes.inline}\r\n                                                color=\"textPrimary\"\r\n                                            >\r\n                                                Raj\r\n                                            </Typography>\r\n                                            {\" — I am looking for a home visit, is this available please reply me\"}\r\n                                            <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"flex-end\" style={{width:'100%'}}>\r\n                                                <IconButton>\r\n                                                    <SimpleLineIcon name=\"phone\" />\r\n                                                </IconButton>\r\n                                                <IconButton>\r\n                                                    <SimpleLineIcon name=\"envelope\" />\r\n                                                </IconButton>\r\n                                            </Box>\r\n                                            </React.Fragment>\r\n                                        }\r\n                                        />\r\n                                    </ListItem>\r\n                                    <Divider />\r\n                                    \r\n                                </List>\r\n                            </Box>\r\n                        </Paper>\r\n\r\n                        <Paper style={{marginTop:'16px'}} className={classes.paper}>\r\n                            <Box component=\"h4\" m={1}>\r\n                                ToDo List\r\n                            </Box>\r\n                            <Box component=\"div\" mb={2}>\r\n                                <List className={classes.root}>\r\n                                    <ListItem alignItems=\"flex-start\">\r\n                                        <ListItemText\r\n                                        primary=\"Need to purchase stocks!.\"\r\n                                        secondary={\r\n                                            <React.Fragment>\r\n                                            <Typography \r\n                                                component=\"span\"\r\n                                                variant=\"body2\"\r\n                                                className={classes.inline}\r\n                                                color=\"textPrimary\"\r\n                                            >\r\n                                                Pharma\r\n                                            </Typography>\r\n                                            {\" — Pharmacy item stocklist\"}\r\n                                            </React.Fragment>\r\n                                        }\r\n                                        />\r\n                                    </ListItem>\r\n                                    <Divider />\r\n                                    <ListItem alignItems=\"flex-start\">\r\n                                        <ListItemText\r\n                                        primary=\"Appointment with client at 3'O clock.\"\r\n                                        secondary={\r\n                                            <React.Fragment>\r\n                                            <Typography \r\n                                                component=\"span\"\r\n                                                variant=\"body2\"\r\n                                                className={classes.inline}\r\n                                                color=\"textPrimary\"\r\n                                            >\r\n                                                Raj\r\n                                            </Typography>\r\n                                            {\" — #100, 7th street, Gandhi road, +91-9999999999\"}\r\n                                            </React.Fragment>\r\n                                        }\r\n                                        />\r\n                                    </ListItem>\r\n                                    <Divider />\r\n                                    <ListItem alignItems=\"flex-start\">\r\n                                        <ListItemText\r\n                                        primary=\"Attend seminar at Gandhi park\"\r\n                                        secondary={\r\n                                            <React.Fragment>\r\n                                            <Typography \r\n                                                component=\"span\"\r\n                                                variant=\"body2\"\r\n                                                className={classes.inline}\r\n                                                color=\"textPrimary\"\r\n                                            >\r\n                                                 #100, 7th street, Gandhi road, +91-9999999999\r\n                                            </Typography>\r\n                                            </React.Fragment>\r\n                                        }\r\n                                        />\r\n                                    </ListItem>\r\n                                    <Divider />\r\n                                    \r\n                                </List>\r\n                            </Box>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={9}>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={3}>\r\n                                <Box component=\"div\" className={\" dashCard\"}>\r\n                                    <Box component=\"div\" className={classes.primaryBg +\" card-body\"}>\r\n                                        <Box component=\"span\" className=\"dashIcon\"><i className=\"icon-people\"></i></Box>\r\n                                        <Box component=\"div\" className=\"counterInside\">\r\n                                            <Box component=\"h3\" className=\"dashCount\">80</Box>\r\n                                            <Box component=\"p\" m={0} className=\"dashLabel\">Todays Appointments</Box>\r\n                                        </Box>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Box component=\"div\" className={\" dashCard\"}>\r\n                                    <Box component=\"div\" className={classes.secondaryBg +\" card-body\"}>\r\n                                        <Box component=\"span\" className=\"dashIcon\"><i className=\"icon-people\"></i></Box>\r\n                                        <Box component=\"div\" className=\"counterInside\">\r\n                                            <Box component=\"h3\" className=\"dashCount\">80</Box>\r\n                                            <Box component=\"p\" m={0} className=\"dashLabel\">Total Appointments</Box>\r\n                                        </Box>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Box component=\"div\" className={\" dashCard\"}>\r\n                                    <Box component=\"div\" className={classes.infoBg +\" card-body\"}>\r\n                                        <Box component=\"span\" className=\"dashIcon\"><i className=\"icon-people\"></i></Box>\r\n                                        <Box component=\"div\" className=\"counterInside\">\r\n                                            <Box component=\"h3\" className=\"dashCount\">45%</Box>\r\n                                            <Box component=\"p\" m={0} className=\"dashLabel\">Stocks</Box>\r\n                                        </Box>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Box component=\"div\" className={\" dashCard\"}>\r\n                                    <Box component=\"div\" className={classes.warningBg +\" card-body\"}>\r\n                                        <Box component=\"span\" className=\"dashIcon\"><i className=\"icon-people\"></i></Box>\r\n                                        <Box component=\"div\" className=\"counterInside\">\r\n                                            <Box component=\"h3\" className=\"dashCount\">80k</Box>\r\n                                            <Box component=\"p\" m={0} className=\"dashLabel\">Total Revenue</Box>\r\n                                        </Box>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Card style={{minHeight:'400px'}}>\r\n                                    <CardContent>\r\n                                    <Chart\r\n                                        chartType=\"AreaChart\"\r\n                                        data={data}\r\n                                        options={options}\r\n                                        width=\"100%\"\r\n                                        height=\"400px\"\r\n                                        legendToggle\r\n                                    />\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <Card style={{minHeight:'400px'}}>\r\n                                    <CardContent class={classes.paper}>\r\n                                        <Box component=\"h4\" m={1} style={{textAlign:'left'}}>\r\n                                            Recent appointments\r\n                                        </Box>\r\n                                        <AppointmentTable />\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </ThemeProvider>\r\n        </Aux>\r\n        \r\n    )\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\r\n\r\nconst Patients = () => {\r\n    return(\r\n        <div>\r\n            Patients\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Patients;","import React, { useState } from 'react';\nimport { Route } from 'react-router';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { AppBar, Toolbar, IconButton,Typography, Box } from '@material-ui/core';\n\n\nimport DrawerLayout from './ui/DrawerLayout/DrawerLayout';\nimport {ThemeProvider, makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport theme from './ui/Theme/Theme';\n\nimport Aux from './Auxiliary/Auxiliary';\nimport { menuList, drawerWidth, getIcon } from './constants';\nimport SimpleLineIcon from 'react-simple-line-icons';\n\nimport './App.css';\nimport Dashboard from './Components/Dashboard/Dashboard';\nimport Patients from './Components/Patients/Patients';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  navWidth: {\n      width:drawerWidth\n  },\n  mainCont: {\n    marginLeft:'64px',\n    transition: theme.transitions.create('margin-left', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerhover: {\n      width:'64px',\n      transition: theme.transitions.create('width', {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.enteringScreen,\n      }),\n    /* \"&:hover\": {\n      width: drawerWidth,\n      mainCont:{\n        width: '240px'\n      }\n    }, */\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  let mini = true;\n\n  const [hoverState, setHoverState] = useState({\n      hover: false\n  })\n\n  const toggleHover = () => {\n    if(mini){\n        document.getElementById('sideMenu').style.width = '240px';\n        document.getElementById('mainCont').style.marginLeft = '240px';\n        \n        mini=false;\n    }else{\n        document.getElementById('sideMenu').style.width = '64px';\n        document.getElementById('mainCont').style.marginLeft = '64px';\n        mini=true;\n    }\n    \n    /* setHoverState({hover: !hoverState.hover})\n    setSelectedIndex('') */\n}\n\n  return (\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <AppBar color=\"grey\" position=\"fixed\" style={{zIndex: theme.zIndex.drawer + 1,}} elevation={0}>\n            <Toolbar>\n              {/* <IconButton aria-label=\"menu\" style={{color:theme.palette.primary.contrastText}}>\n                <MenuIcon />\n              </IconButton> */}\n              <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\" style={{width:'100%'}}>\n                <Typography variant=\"h6\" noWrap>\n                  LOGO\n                </Typography>\n                <Box component=\"div\">\n                  <IconButton>\n                    <SimpleLineIcon name=\"bell\" />\n                  </IconButton>\n                  <IconButton>\n                    <SimpleLineIcon name=\"settings\" />\n                  </IconButton>\n                  <IconButton>\n                    <SimpleLineIcon name=\"logout\" />\n                  </IconButton>\n                </Box>\n              </Box>\n              \n            </Toolbar>\n          </AppBar>\n          <Toolbar />\n          <DrawerLayout hoverClass={classes.drawerhover} elId=\"sideMenu\" onHover={toggleHover} />\n          <main className={classes.mainCont} id=\"mainCont\">\n            <Route path=\"/\" exact component={Dashboard} />\n            <Route path=\"/patients\" component={Patients} />\n          </main>\n          \n        </ThemeProvider>\n        \n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}